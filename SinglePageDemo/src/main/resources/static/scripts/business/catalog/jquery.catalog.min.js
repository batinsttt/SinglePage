var Attribute = {
    _xhrSave: null,
    _listObject: null,
    _listObjectPop: null,
    _isShowDlg: false,
    searchAttribute: function () {
        var attributeCode = $("#attCode").val().trim();
        var attributeName = $("#attName").val().trim();
        var valueType = $("#valueType").val().trim();
        var status = $("#status").val().trim();
        var dataModel = new Object();
        dataModel.attributeCode = attributeCode;
        dataModel.attributeName = attributeName;
        dataModel.valueType = valueType;
        dataModel.status = status;
        dataModel.lstTableName = Attribute._listObject;
        $("#searchAttGrid").datagrid("load", dataModel)
    },
    openAttributeCustomer: function (rowId) {
        $("#popupAttribute #successMsg").html("").hide();
        $("#popupAttributeDetail #successMsg").html("").hide();
        $("#errMsgPop").html("").hide();
        $("#attValueDiv").hide();
        setSelectBoxValue("statusPop", 1);
        setTextboxValue("attributeCodePop", "");
        setTextboxValue("attributeNamePop", "");
        setTextboxValue("notePop", "");
        setSelectBoxValue("valueTypePop", 1);
        $("#objectPop").dropdownchecklist("refresh");
        $("#objectPop").dropdownchecklist("enable");
        $("#objectPop").val("ALL");
        $("#id").val(0);
        disabled("statusPop");
        var rows = null;
        if (rowId != undefined && rowId != null && rowId >= 0) {
            rows = $("#searchAttGrid").datagrid("getRows")[rowId]
        }
        $("#popupAttribute").dialog({
            closed: false,
            cache: false,
            modal: true,
            width: 700,
            height: 300,
            onOpen: function () {
                $(".ui-dropdownchecklist-selector").removeClass("ui-state-active");
                var width1 = $("#attributeCodePop").width();
                $(".combo").attr("style", "width: " + (width1 + 9) + "px !important;");
                Attribute._isShowDlg = true;
                if (rows != null) {
                    enable("statusPop");
                    disabled("attributeCodePop");
                    disabled("valueTypePop");
                    $("#valueTypePopDiv").addClass("BoxDisSelect");
                    $("#id").val(rows.id);
                    setTextboxValue("attributeCodePop", rows.attributeCode);
                    setTextboxValue("attributeNamePop", rows.attributeName);
                    setSelectBoxValue("valueTypePop", rows.valueType);
                    if (rows.note != null) {
                        setSelectBoxValue("notePop", rows.note)
                    }
                    $("#objectPop").val(rows.tableName);
                    $("#objectPop").dropdownchecklist("refresh");
                    $("#objectPop").dropdownchecklist("disable");
                    if (rows.status == "RUNNING") {
                        setSelectBoxValue("statusPop", 1)
                    } else {
                        setSelectBoxValue("statusPop", -1)
                    }
                    $("#attributeNamePop").focus()
                } else {
                    $("#attributeCodePop").focus();
                    $("#objectPop").dropdownchecklist("refresh");
                    $("#valueTypePopDiv").removeClass("BoxDisSelect")
                }
            },
            onBeforeClose: function () {
                var tabindex = 1;
                $(" .InputTextStyle, select, input, button , li , tr, td, th, label, ul, a, img").each(function () {
                    if (this.type != "hidden") {
                        $(this).attr("tabindex", "")
                    }
                    tabindex++
                });
                var curIdFocus = $("#cur_focus").val();
                $("#" + curIdFocus).focus();
                Attribute._isShowDlg = false
            },
            onClose: function () {
                $(".easyui-dialog #attributeCodePop").val("");
                $(".easyui-dialog #attributeNamePop").val("");
                $(".easyui-dialog #valueTypePop").val(-1);
                $(".easyui-dialog #valueTypePop").change();
                $(".easyui-dialog #statusPop").val(1);
                $(".easyui-dialog #statusPop").change();
                $(".easyui-dialog #notePop").val("");
                $(".easyui-dialog #errMsgPop").hide();
                enable("attributeCodePop");
                enable("valueTypePop");
                enable("objectPop");
                $("#objectPop").dropdownchecklist("close")
            }
        })
    },
    saveAttributeCustomer: function () {
        $("#errMsgPop").html("").hide();
        var msg = "";
        if (msg.length == 0) {
            msg = ValidateUtils.getMessageOfRequireCheck("attributeCodePop", "Mã thuộc t�nh")
        }
        if (msg.length == 0) {
            msg = ValidateUtils.getMessageOfSpecialCharactersValidate("attributeCodePop", "Mã thuộc t�nh", Utils._CODE)
        }
        if (msg.length == 0) {
            msg = ValidateUtils.getMessageOfRequireCheck("attributeNamePop", "Tên thuộc t�nh")
        }
        if (msg.length == 0 & $("#objectPop").val() == null) {
            msg = "Bạn chưa ch�?n giá trị cho trư�?ng �?ơn tượng."
        }
        if (Attribute._listObjectPop == "ALL") {
            msg = "Không có �?ối tượng nào được ch�?n."
        }
        if (msg.length > 0) {
            $("#errMsgPop").html(msg).show();
            return false
        }
        var dataModel = new Object();
        dataModel.attributeId = $("#id").val();
        dataModel.attributeCodePop = $("#attributeCodePop").val().trim();
        dataModel.attributeNamePop = $("#attributeNamePop").val().trim();
        dataModel.valueTypePop = $("#valueTypePop").val().trim();
        dataModel.statusPop = $("#statusPop").val().trim();
        dataModel.notePop = $("#notePop").val().trim();
        dataModel.lstTableNamePop = Attribute._listObjectPop;
        Utils.addOrSaveData(dataModel, "/catalog/customer/save-or-update-attribute", Attribute._xhrSave, "errMsgPop", function (data) {
            $("#popupAttribute #successMsg").html("Thuộc t�nh đã được lưu thành công").show();
            var tm = setTimeout(function () {
                $("#popupAttribute").dialog("close");
                $("#searchAttGrid").datagrid("reload");
                clearTimeout(tm)
            }, 1500)
        }, null, "#popupAttribute", null, null, function (data) {
            if (data.error != undefined && data.error && data.errMsg != undefined) {
                $("#errMsgPop").html(data.errMsg).show()
            }
        });
        return false
    },
    viewAttributeValue: function (attributeId) {
        $("#attValueDiv").show();
        $("#attributeIdCur").val(attributeId);
        var params = new Object();
        params.attributeId = attributeId;
        $("#searchValGrid").datagrid({
            url: "/catalog/customer/search-attribute-value",
            pageList: [10, 20, 30],
            autoRowHeight: true,
            rownumbers: true,
            checkOnSelect: true,
            selectOnCheck: false,
            pagination: true,
            queryParams: params,
            pageSize: 10,
            fitColumns: true,
            scrollbarSize: 0,
            width: 550,
            columns: [[{
                field: "valCode",
                title: "Mã giá trị",
                sortable: false,
                resizable: false,
                width: 75,
                align: "left",
                formatter: function (value, rowData) {
                    if (rowData.attributeDetailCode != undefined && rowData.attributeDetailCode != null) {
                        return Utils.XSSEncode(rowData.attributeDetailCode)
                    } else {
                        return ""
                    }
                }
            }, {
                field: "valName",
                title: "Tên giá trị",
                sortable: false,
                resizable: false,
                width: 150,
                align: "left",
                formatter: function (value, rowData) {
                    if (rowData.attributeDetailName != undefined && rowData.attributeDetailName != null) {
                        return Utils.XSSEncode(rowData.attributeDetailName)
                    } else {
                        return ""
                    }
                }
            }, {
                field: "valStatus",
                title: "Trạng thái",
                sortable: false,
                resizable: false,
                width: 50,
                align: "left",
                formatter: function (value, rowData) {
                    var status = rowData.status;
                    if (status != undefined && status != null) {
                        if (status == "RUNNING") {
                            return "Hoạt động"
                        } else {
                            return "Tạm ngưng"
                        }
                    } else {
                        return ""
                    }
                }
            }, {
                field: "edit",
                title: '<a title="Thêm giá trị" href="javascript:void(0)" onclick="return Attribute.showAttributeValueDlg();"><img width="15" height="15" src="' + WEB_CONTEXT_PATH + '/resources/images/icon_add.png"/></a>',
                align: "center",
                width: 25,
                sortable: false,
                resizable: false,
                formatter: function (value, row, index) {
                    return "<a href='javascript:void(0)' title='C�p nh�t giá trị' onclick='return Attribute.showAttributeValueDlg(" + index + ");'><span style='cursor:pointer'><img width='15' height='15' src='" + WEB_CONTEXT_PATH + "/resources/images/icon-edit.png'/></span></a>"
                }
            },]],
            onLoadSuccess: function (data) {
                $(".datagrid-header-rownumber").html("STT");
                updateRownumWidthForJqGrid("#searchValGrid")
            }
        });
        $(".datagrid-body").css("overflow", "hidden")
    },
    showAttributeValueDlg: function (rowId) {
        $("#popupAttribute #successMsg").html("").hide();
        $("#popupAttributeDetail #successMsg").html("").hide();
        $("#errMsgDetailPop").html("").hide();
        setTextboxValue("attributeDetailCodePop", "");
        setTextboxValue("attributeDetailNamePop", "");
        setSelectBoxValue("statusDetailPop", 1);
        var rows = null;
        if (rowId != undefined && rowId != null && rowId >= 0) {
            rows = $("#searchValGrid").datagrid("getRows")[rowId]
        }
        $("#popupAttributeDetail").dialog({
            closed: false,
            cache: false,
            modal: true,
            width: 700,
            height: 230,
            singleSelect: true,
            onOpen: function () {
                Attribute._isShowDlg = true;
                var tabindex = -1;
                $(".InputTextStyle, select, input, button , li , tr, td, th, label, ul, a, img").each(function () {
                    if (this.type != "hidden") {
                        $(this).attr("tabindex", tabindex);
                        tabindex -= 1
                    }
                });
                tabindex = 1;
                $(".easyui-dialog input,.easyui-dialog select,.easyui-dialog button").each(function () {
                    if (this.type != "hidden") {
                        $(this).attr("tabindex", "");
                        tabindex++
                    }
                });
                if (rows != null) {
                    enable("statusDetailPop");
                    disabled("attributeDetailCodePop");
                    $("#idDetail").val(rows.id);
                    setTextboxValue("attributeDetailCodePop", rows.attributeDetailCode);
                    setTextboxValue("attributeDetailNamePop", rows.attributeDetailName);
                    if (rows.status == "RUNNING") {
                        setSelectBoxValue("statusDetailPop", 1)
                    } else {
                        setSelectBoxValue("statusDetailPop", -1)
                    }
                    $("#attributeDetailNamePop").focus()
                } else {
                    $("#idDetail").val(0);
                    $("#attributeDetailCodePop").focus();
                    disabled("statusDetailPop")
                }
            },
            onBeforeClose: function () {
                var tabindex = 1;
                $(" .InputTextStyle, select, input, button , li , tr, td, th, label, ul, a, img").each(function () {
                    if (this.type != "hidden") {
                        $(this).attr("tabindex", "")
                    }
                    tabindex++
                });
                var curIdFocus = $("#cur_focus").val();
                $("#" + curIdFocus).focus();
                Attribute._isShowDlg = false
            },
            onClose: function () {
                $(".easyui-dialog #attributeDetailCodePop").val("");
                $(".easyui-dialog #attributeDetailNamePop").val("");
                $(".easyui-dialog #statusDetailPop").val(1);
                $(".easyui-dialog #statusDetailPop").change();
                enable("attributeDetailCodePop")
            }
        })
    },
    saveAttributeDetail: function () {
        var msg = "";
        if (msg.length == 0) {
            var attributeDetailCode = $("#attributeDetailCodePop").val().trim();
            if (attributeDetailCode == null || attributeDetailCode == undefined || attributeDetailCode.length == 0) {
                msg = "Mã giá trị chưa được nh�p!"
            }
        }
        if (msg.length == 0) {
            var attributeDetailName = $("#attributeDetailNamePop").val().trim();
            if (attributeDetailName == null || attributeDetailName == undefined || attributeDetailName.length == 0) {
                msg = "Tên giá trị chưa được nh�p!"
            }
        }
        if (msg.length == 0) {
            msg = ValidateUtils.getMessageOfRequireCheck("attributeDetailCodePop", "Mã giá trị")
        }
        if (msg.length == 0) {
            msg = ValidateUtils.getMessageOfSpecialCharactersValidate("attributeDetailCodePop", "Mã giá trị", Utils._CODE)
        }
        if (msg.length == 0) {
            msg = ValidateUtils.getMessageOfRequireCheck("attributeDetailNamePop", "Tên giá trị")
        }
        if (msg.length > 0) {
            $("#errMsgDetailPop").html(msg).show();
            return false
        }
        var dataModel = new Object();
        dataModel.attributeDetailId = $("#idDetail").val().trim();
        dataModel.attributeId = $("#attributeIdCur").val().trim();
        dataModel.attributeDetailCode = $("#attributeDetailCodePop").val().trim();
        dataModel.attributeDetailName = $("#attributeDetailNamePop").val().trim();
        dataModel.status = $("#statusDetailPop").val();
        Utils.addOrSaveData(dataModel, "/catalog/customer/save-attributedetail", null, "errMsgDetailPop", function (data) {
            $("#popupAttributeDetail #successMsg").html("Giá trị thuộc t�nh đã được lưu thành công").show();
            var tm = setTimeout(function () {
                $("#popupAttributeDetail").dialog("close");
                $("#searchValGrid").datagrid("reload");
                clearTimeout(tm)
            }, 1500)
        });
        return false
    }
};
var Customer = {
    _loading: null, _xhrSave: null, _isShowDlg: false, _loading: true, _approve: null, resize: function () {
        var hSidebar3 = $("#tree").height();
        var hSidebar1 = $(".Content3Section").height();
        if (hSidebar3 > 650) {
            $(".ReportTree2Section").css("height", "auto")
        } else {
            if (hSidebar3 < hSidebar1) {
                if (hSidebar1 < 700) {
                    $(".ReportTree2Section").height(hSidebar1 - 60)
                } else {
                    $(".ReportTree2Section").height(650)
                }
            } else {
                if (hSidebar3 < 300) {
                    $(".ReportTree2Section").height(300)
                } else {
                    $(".ReportTree2Section").css("height", "auto")
                }
            }
        }
        var hSidebar2 = $(".Sidebar1Section").height();
        if (hSidebar1 > hSidebar2) {
            $(".Content1Section").height(hSidebar1)
        } else {
            $(".Content1Section").height(hSidebar2)
        }
        return
    }, importCustomer: function () {
        $("#importFrm").attr("action", "/catalog/customer/import-excel");
        ReportsUtils.uploadExcel(function () {
            $("#searchCustomerGrid").datagrid("reload")
        })
    }, searchCustomer: function () {
        var params = ValidateUtils.validate("#errMsg", ".CustomerSearchForm");
        if (params.error) {
            return false
        }
        $("#searchCustomerGrid").datagrid("load", params);
        return false
    }, exportExcel: function () {
        $("#errExcelMsg").html("").hide();
        $("#errMsg").html("").hide();
        $.messager.confirm("Xác nh�n", "Bạn có muốn export khách hàng ra excel?", function (r) {
            if (r) {
                var params = new Object();
                params.shopCode = $("#shopCode").val().trim();
                params.customerCode = $("#customerCode").val().trim();
                params.customerName = $("#customerName").val().trim();
                params.address = $("#address").val().trim();
                params.status = $("#status").val().trim();
                params.phoneNumber = $("#phoneNumber").val().trim();
                var url = "/catalog/customer/export-excel";
                ReportsUtils.exportExcel(params, url, "errExcelMsg", true)
            }
        });
        return false
    }, approve: function () {
        Customer._approve = 1;
        Customer.updateCustomerInfo()
    }, reject: function () {
        Customer._approve = 3;
        Customer.updateCustomerInfo()
    }, getImportTemplate: function () {
        var params = new Object();
        var url = "/customer/get-import-template";
        CommonSearch.exportExcelData(params, url, "errExcelMsg", true)
    }, showCustomerEdit: function (customerId) {
        $(".VinamilkTheme #divOverlay").show();
        window.location.href = WEB_CONTEXT_PATH + "/catalog/customer/detail?customerId=" + customerId;
        return false
    }, viewBigMap: function () {
        var arrParam = new Object();
        arrParam.lat = $("#lat").val().trim();
        arrParam.lng = $("#lng").val().trim();
        ViettelMap.viewBigMap(arrParam, "Bản đồ vị tr� khách hàng");
        $(".dialog-toolbar").css({"float": "right", "background-color": "transparent"})
    }, updateCustomerInfo: function () {
        var dataModel = new Object();
        dataModel.error = false;
        if (Customer._approve == 3) {
            dataModel.customerId = $("#customerId").val().trim()
        } else {
            dataModel = ValidateUtils.validate("#errChangeCustomer", ".customerChangeForm")
        }
        if (dataModel.error) {
            return false
        }
        dataModel.status = Customer._approve;
        if (Customer._approve == null) {
            dataModel.status = $("#status").val().trim()
        }
        dataModel.address = $("#address").val().trim();
        dataModel.description = $("#description").val().trim();
        Utils.addOrSaveData(dataModel, "/catalog/customer/saveorupdate", Customer._xhrSave, "errChangeCustomer", function (data) {
            setTimeout(function () {
                if (Customer._approve == 3) {
                    Customer.cancelCustomerInfo()
                } else {
                    gotoPage(WEB_CONTEXT_PATH+"/catalog/customer/detail?customerId=" + data.customerId)
                }
            }, 1500)
        })
    }, cancelCustomerInfo: function () {
        window.location.href = WEB_CONTEXT_PATH +"/catalog/customer/info"
    }, activeTab1: function () {
        Customer.hideTab();
        $("#tab1").addClass("Active");
        $("#content1").show()
    }, activeTab2: function () {
        Customer.hideTab();
        $("#tab2").addClass("Active");
        $("#content2").show();
        $("#errChangeCustomer").hide()
    }, hideTab: function () {
        $("#tab1").removeClass("Active");
        $("#tab2").removeClass("Active");
        $("#content1").hide();
        $("#content2").hide()
    }, checkEmptyUrl: function (url) {
        if (url == null || url == undefined || url == "") {
            return false
        }
    }, saveProperty: function () {
        var arr1 = [];
        var arr2 = [];
        var i = 0;
        $(".attributeCls").each(function () {
            var objectId = "#" + $(this).attr("id");
            var type = $(objectId).attr("multiple");
            var idx = objectId.split("_")[1];
            arr1[i] = $("#attH_" + idx).val();
            if (type != null && type != undefined && type == "multiple") {
                arr2[i] = $(objectId).combobox("getValues")
            } else {
                arr2[i] = $(objectId).val()
            }
            if (arr2[i] == null || arr2[i] == "-1") {
                arr2[i] = ""
            }
            i++
        });
        var dataModel = new Object();
        dataModel.attValueArray = arr2;
        dataModel.attIdArray = arr1;
        dataModel.customerId = $("#customerId").val();
        Utils.addOrSaveData(dataModel, "/catalog/customer/saveproperty", Customer._xhrSave, "errMsgProperty", function (data) {
            if (data.error != null && data.error == false) {
                $("#successMsg").html("Lưu dữ liệu thành công!").show()
            } else {
                $("#errMsgProperty").html(data.errMsg).show()
            }
        }, null);
        return false
    }, deleteLocation: function () {
        if (ViettelMap._listOverlay != null && ViettelMap._listOverlay != undefined) {
            $.messager.confirm("Xác nh�n", "Bạn có muốn xóa vị tr�?", function (r) {
                if (r) {
                    ViettelMap.clearOverlays();
                    $("#lat").val("");
                    $("#lng").val("")
                }
            })
        }
    }, customerDelete: function (customerId) {
        var dataModel = new Object();
        dataModel.customerId = customerId;
        $.messager.confirm("Xác nh�n", "Bạn có muốn xóa?", function (r) {
            if (r) {
                Utils.addOrSaveData(dataModel, "/catalog/customer/delete", Customer._xhrSave, "errMsgStaff", function (data) {
                    if (data.error != null && data.error == false) {
                        $("#deleteMsgCustomer").html("Xóa dữ liệu thành công").show();
                        setTimeout(function () {
                            $("#deleteMsgCustomer").html("").hide()
                        }, 3000);
                        $("#searchCustomerGrid").datagrid("load")
                    } else {
                        $("#errMsgCustomer").html("Xóa dữ liệu không thành công: " + data.errMsg).show();
                        setTimeout(function () {
                            $("#errMsgCustomer").html("").hide()
                        }, 3000)
                    }
                }, null, null, true)
            }
        })
    }
};
var Product = {
    _xhrSave: null, _xhrDel: null, countArray: null, hideTabs: function () {
        $("#tab1").removeClass("Active");
        $("#tab2").removeClass("Active");
        $("#content1").hide();
        $("#content2").hide();
        $(".ErrorMsgStyle").hide();
        $(".SuccessMsgStyle").hide()
    }, activeTab1: function () {
        Product.hideTabs();
        $("#tab1").addClass("Active");
        $("#content1").show()
    }, activeTab2: function () {
        Product.hideTabs();
        $("#tab2").addClass("Active");
        $("#content2").show();
        Product.loadImage()
    }, searchProduct: function () {
        var params = new Object();
        var categoryStr = "";
        var arr = $("#category").val();
        if (arr == null) {
            arr = []
        }
        if (arr.length > 0 && arr[0] == "-1") {
            arr.splice(0, 1)
        }
        var n = arr.length;
        for (var i = 0; i < n; i++) {
            if (i != 0) {
                categoryStr += "-"
            }
            categoryStr += arr[i]
        }
        params.productCode = $("#productCode").val().trim();
        params.productName = $("#productName").val().trim();
        params.categoryStr = categoryStr;
        params.statusValue = $("#status").val();
        $("#productGrid1").datagrid("load", params);
        return false
    }, fillCategories: function () {
        $.ajax({
            url: "/catalog/product/get-category", method: "GET", success: function (rs) {
                if (rs.error != undefined && !rs.error) {
                    var lstCategory = rs.rows;
                    $("#category").removeAttr("disabled");
                    var html = "";
                    if (lstCategory.length > 0) {
                        html += '<option value="-1" selected="selected">--Tất cả--</option>';
                        for (var i = 0; i < lstCategory.length; i++) {
                            html += '<option value="' + Utils.XSSEncode(lstCategory[i].productInfoCode) + '">' + Utils.XSSEncode(lstCategory[i].productInfoCode) + " - " + Utils.XSSEncode(lstCategory[i].productInfoName) + "</option>"
                        }
                        $("#category").html(html);
                        $("#category").change();
                        $("#ddcl-category").remove();
                        $("#ddcl-category-ddw").remove();
                        $("#category").dropdownchecklist({
                            emptyText: "Ch�?n ngành hàng",
                            firstItemChecksAll: true,
                            maxDropHeight: 350
                        })
                    } else {
                        $("#category").html("");
                        $("#category").attr("disabled", "disabled");
                        $("#category").dropdownchecklist({
                            emptyText: "-------------------",
                            firstItemChecksAll: true,
                            maxDropHeight: 350
                        })
                    }
                    $(".ui-dropdownchecklist-text").css({"padding-left": "5px"});
                    var w = $("#productCode").width() - 24;
                    $(".CatSelectDiv .ui-dropdownchecklist-selector").css("width", w + "px");
                    $(".CatSelectDiv #ddcl-category-ddw").css("width", (w + 33) + "px");
                    $(".CatSelectDiv .MySelectBoxClass").css("width", $("#productCode").width() + "px")
                }
            }
        })
    }, importExcel: function () {
        ReportsUtils.uploadExcel()
    }, exportExcel: function () {
        $("#errExcelMsg").html("").hide();
        $("#errMsg").html("").hide();
        $("#sucExcelMsg").html("").hide();
        $.messager.confirm("Xác nh�n", "Bạn có muốn xuất danh sách sản phẩm ra excel?", function (r) {
            if (r) {
                var params = new Object();
                var categoryStr = "";
                var arr = $("#category").val();
                if (arr == null) {
                    arr = []
                }
                if (arr.length > 0 && arr[0] == "-1") {
                    arr.splice(0, 1)
                }
                var n = arr.length;
                for (var i = 0; i < n; i++) {
                    if (i != 0) {
                        categoryStr += "-"
                    }
                    categoryStr += arr[i]
                }
                params.productCode = $("#productCode").val().trim();
                params.productName = $("#productName").val().trim();
                params.categoryStr = categoryStr;
                params.statusValue = $("#status").val();
                var url = "/catalog/product/export-excel";
                CommonBusiness.exportExcelData(params, url, "errExcelMsg", true)
            }
        });
        return false
    }, beforeImportExcel: function () {
        if (!previewImportExcelFile(document.getElementById("excelFile"))) {
            return false
        }
        $("#errExcelMsg").html("").hide();
        $("#sucExcelMsg").html("").hide();
        $(".VinamilkTheme #divOverlay").show();
        return true
    }, afterImportExcelUpdate: function (responseText, statusText, xhr, $form) {
        $("#excelFile").val("");
        $("#fakefilepc").val("");
        $("#productGrid1").datagrid("reload");
        $(".VinamilkTheme #divOverlay").hide();
        if (statusText == "success") {
            Product.fillCategories();
            $("#responseDiv").html(responseText);
            if ($("#errorExcel").html().trim() == "true" || $("#errorExcelMsg").html().trim().length > 0) {
                $("#errExcelMsg").html($("#errorExcelMsg").html()).show()
            } else {
                if ($("#typeView").html().trim() == "false") {
                    var totalRow = parseInt($("#totalRow").html().trim());
                    var numFail = parseInt($("#numFail").html().trim());
                    var fileNameFail = $("#fileNameFail").html();
                    var mes = "Nh�p thành công " + (totalRow - numFail) + " dòng, thất bại " + numFail + " dòng. ";
                    if (numFail > 0) {
                        mes += "Xem chi tiết lỗi!";
                        $("#sucExcelMsg").html('<a style="color:#f00" href="' + fileNameFail + '">' + mes + "</a>").show()
                    } else {
                        $("#sucExcelMsg").html(mes).show()
                    }
                    setTimeout(function () {
                        $("#sucExcelMsg").html("").hide()
                    }, 15000)
                }
            }
        }
    }, showViewScreen: function (productId) {
        $(".VinamilkTheme #divOverlay").show();
        hrefPost("/catalog/product/view-product?productId=" + productId, {allowed: false});
        return false
    }, loadImage: function (seq, error) {
        var productId = $("#productId").val().trim();
        var data = new Object();
        data.productId = productId;
        var kData = $.param(data, true);
        if (CKEDITOR.instances.description != null) {
            CKEDITOR.instances.description.destroy(true)
        }
        $.ajax({
            type: "POST", url: "/catalog/product/image", data: (kData), dataType: "html", success: function (data) {
                $("#divImageProduct").html(data).show();
                editor = CKEDITOR.replace("description");
                $(".cke_dialog_ui_hbox_last").css("padding", "5px");
                $("#divMI").css({"padding-left": 0, "padding-right": 0});
                var w = $("#divMI").width() - 310;
                if (w > 0) {
                    $("#divMI").css({"padding-left": w / 2, "padding-right": w / 2})
                }
                if (seq != undefined && seq != null) {
                    if (error) {
                        $("#errMsgUpload").html(seq).show()
                    } else {
                        $("#successMsgUpload").html(seq).show()
                    }
                }
                Product.countArray = new Map()
            }, error: function (XMLHttpRequest, textStatus, errorThrown) {
                $.ajax({
                    type: "POST", url: "/check-session", dataType: "json", success: function (data) {
                        editor = CKEDITOR.replace("description")
                    }, error: function (XMLHttpRequest, textStatus, errorThrown) {
                        Product.activeTab1()
                    }
                })
            }
        });
        return false
    }, getListMediaItem: function (type) {
        if (type == 0) {
            if ($("#numIndex").val() != null && parseInt($("#numIndex").val()) > 0) {
                $("#numIndex").val(parseInt($("#numIndex").val()) - 1);
                if ($("#numIndex").val() == 0) {
                    $("#pageUp").hide()
                }
            }
            $("#pageDown").show()
        } else {
            $("#numIndex").val(parseInt($("#numIndex").val()) + 1);
            if (($("#numIndex").val() == Math.floor($("#numPage").val() / 8)) || (parseInt($("#numIndex").val()) + 1 == Math.floor($("#numPage").val() / 8) && $("#numPage").val() % 8 == 0)) {
                $("#pageDown").hide()
            }
            $("#pageUp").show()
        }
        $.ajax({
            type: "POST",
            url: "/catalog/product/getlistmediaitem",
            data: ({productId: $("#productId").val(), numIndex: $("#numIndex").val()}),
            dataType: "html",
            success: function (data) {
                $("#divMI").html(data)
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $.ajax({
                    type: "POST", url: "/check-session", dataType: "json", success: function (data) {
                    }, error: function (XMLHttpRequest, textStatus, errorThrown) {
                        window.location.href = WEB_CONTEXT_PATH + '/home' 
                    }
                })
            }
        })
    }, changeProductDescription: function () {
        var msg = "";
        $("#errMsg").html("").hide();
        if (msg.length > 0) {
            $("#errMsg").html(msg).show();
            return false
        }
        var dataModel = new Object();
        dataModel.productId = $("#productId").val();
        dataModel.introductionId = $("#introductionId").val();
        dataModel.description = CKEDITOR.instances.description.getData();
        Utils.addOrSaveData(dataModel, "/catalog/product/change-product-description", Product._xhrSave, null, null);
        return false
    }, changeProductImage: function (productId) {
        $("#errMsgUpload").html("").hide();
        var msg = "";
        var size = parseInt($("#totalImage").val().trim()) + Product.countArray.size();
        if (size > 20) {
            msg = "Chỉ cho phép upload tối đa 20 hình cho 1 sản phẩm."
        }
        if (msg.length == 0 && $("#fileQueue").html().length > 0 && Product.countArray.size() == 0) {
            msg = "Không có hình nào được ch�?n."
        }
        if (msg.length > 0) {
            $("#errMsgUpload").html(msg).show();
            return false
        }
        $("#divOverlay").show();
        $("#imageFile").uploadifySettings("scriptData", {productId: productId, currentUser: currentUser});
        if ($("#videoMsg").html() != "" && parseInt($("#mediaType").val()) == 1) {
            $("#videoMsg").html("Mỗi sản phẩm chỉ được upload 1 file video").show()
        }
        $("#imageFile").uploadifyUpload();
        if ($("#fileQueue").html() == "" || parseInt($("#successUpload").val().trim()) == 1) {
            $("#importFrm").submit()
        }
        return false
    }, uploadVideo: function () {
        $("#importFrm").submit();
        return true
    }, beforeImportItem: function () {
        if (!Product.previewImportFile(document.getElementById("videoFile"), 1)) {
            $("#errorValue").val(1);
            $("#divOverlay").hide();
            return false
        }
        $("#videoMsg").html("").hide();
        return true
    }, afterImportItem: function (responseText, statusText, xhr, $form) {
        responseText = responseText.substring(5, 19);
        eval("var obj=" + responseText);
        var msg = "";
        var error = true;
        if (obj.status != null && obj.status == 2) {
            msg = "K�ch thước file Video vượt quá 10MB. Không thể tải lên"
        } else {
            if ($("#countFail").val() <= 0) {
                error = false
            }
            if (obj.status == 1) {
                msg = "Tải thành công " + $("#countSuccess").val() + " hình ảnh,tải thất bại " + $("#countFail").val() + " hình ảnh và 1 video"
            } else {
                msg = "Tải thành công " + $("#countSuccess").val() + " hình ảnh và 1 video,tải thất bại " + $("#countFail").val() + " hình ảnh"
            }
        }
        $("#divOverlay").hide();
        Product.loadImage(msg, error)
    }, previewImportFile: function (fileObj, type) {
        if (type == 0) {
            if (fileObj.value != "") {
                if (!/(\.jpg|\.png)$/i.test(fileObj.value)) {
                    $("#errMsgUpload").html("File upload không hợp lệ.Vui lòng kiểm tra lại định dạng file").show();
                    fileObj.value = "";
                    fileObj.focus();
                    $("#errorValue").val(1);
                    return false
                } else {
                    $("#errorValue").val(0);
                    $("#errMsgUpload").html("").hide()
                }
            } else {
                $("#errMsgUpload").html("Không có file nào được ch�?n.").show();
                $("#successUpload").val(1);
                return false
            }
        } else {
            if (fileObj.value != "") {
                if (!/(\.mp4|\.avi|\.flv)$/i.test(fileObj.value)) {
                    $("#errMsgUpload").html("File ch�?n không phải định dạng avi, mp4, flv").show();
                    fileObj.value = "";
                    fileObj.focus();
                    $("#errorValue").val(1);
                    return false
                } else {
                    if (fileObj.files[0].size > 10485760) {
                        $("#errMsgUpload").html("K�ch thước file Video vượt quá 10MB. Không thể tải lên").show();
                        fileObj.value = "";
                        fileObj.focus();
                        $("#errorValue").val(1);
                        return false
                    } else {
                        $("#errorValue").val(0);
                        $("#videoMsg").html(fileObj.value).show()
                    }
                }
            } else {
                $("#errMsgUpload").html("Không có file nào được ch�?n.").show();
                $("#errorValue").val(1);
                return false
            }
        }
        return true
    }, deleteMediaItem: function () {
        var dataModel = new Object();
        dataModel.mediaItemId = $("#mediaItemId").val();
        $.messager.confirm("Xác nh�n", "Bạn có muốn xóa file này không?", function (r) {
            if (r) {
                Utils.saveData(dataModel, "/catalog/product/remove-media-item", Product._xhrDel, null, function (data) {
                    Product.loadImage()
                }, null, null, true)
            }
        });
        return false
    }, liveUpdateImageForProduct: function (object, mediaType, mediaItemId, checkPermission) {
        $("#mediaItemId").val(mediaItemId);
        if (mediaType == 0) {
            $("#player").html("").hide();
            $("#imageBox").show();
            var orgSrc = object.attr("data");
            var source = imgServerPath + orgSrc;
            $("#imageBox").html('<img width="715" height="551" alt="" src="' + source + '" />');
            if (checkPermission == 1) {
                $("#imageBox").append('<a class="Sprite1 HideText DeleteLinkStyle" onclick="return Product.deleteMediaItem();" href="javascript:void(0)">Xóa</a>')
            }
        } else {
            $("#player").show();
            $("#imageBox").hide();
            var orgSrc = object.attr("data");
            var source = imgServerPath + orgSrc;
            if (orgSrc.substring(orgSrc.length - 3, orgSrc.length) == "avi") {
                $("#player").html('<a class="media" href="' + source + '"></a>');
                $(".media").media({width: 715, height: 551, autoplay: true})
            } else {
                flowplayer("player", WEB_CONTEXT_PATH + "/resources/scripts/plugins/flowplayer-3.2.16/flowplayer/flowplayer-3.2.16.swf", {
                    plugins: {audio: {url: WEB_CONTEXT_PATH + "/resources/scripts/plugins/flowplayer-3.2.16/flowplayer/audio/flowplayer.audio-3.2.10.swf"}},
                    clip: {url: source, autoPlay: true, autoBuffering: true},
                    play: {replayLabel: "Xem lại"}
                })
            }
        }
    }, exportExcelTemplate: function () {
        var url = "/catalog/product/export-template-excel-product";
        if (CommonSearch._xhrReport != null) {
            CommonSearch._xhrReport.abort();
            CommonSearch._xhrReport = null
        }
        CommonSearch._xhrReport = $.ajax({
            type: "POST", url: url, dataType: "json", success: function (data) {
                hideLoadingIcon();
                if (data.error && data.errMsg != undefined) {
                    $("#" + errMsg).html("Xuất báo cáo không thành công. Lỗi: " + escapeSpecialChar(data.errMsg)).show()
                } else {
                    if (data.hasData != undefined && !data.hasData) {
                        $("#" + errMsg).html("Không có dữ liệu để xuất báo cáo").show()
                    } else {
                        window.location.href = data.view;
                        setTimeout(function () {
                            CommonSearch.deleteFileExcelExport(data.view)
                        }, 30000)
                    }
                }
            }, error: function (XMLHttpRequest, textStatus, errorDivThrown) {
            }
        });
        return false
    }
};
var Staff = {
    _xhrSave: null, _staffSearch: new Object(), searchStaff: function () {
        $("#errMsg").html("").hide();
        Staff._staffSearch.staffCode = $("#staffCode").val().trim();
        Staff._staffSearch.staffName = $("#staffName").val().trim();
        Staff._staffSearch.status = $("#status").val().trim();
        $("#gridStaff").datagrid("load", Staff._staffSearch);
        return false
    }, importExcel: function () {
        $("#importFrm").attr("action", "/catalog/staff/import-excel?token=" + $("#token").val());
        $("#importFrm").submit();
        return false
    }, saveOrUpdate: function () {
        var msg = "";
        $("#errMsg").hide();
        msg = ValidateUtils.getMessageOfRequireCheck("staffCode", "Mã nhân viên");
        if (msg.length == 0) {
            msg = ValidateUtils.getMessageOfSpecialCharactersValidate("staffCode", "Mã nhân viên", Utils._CODE)
        }
        if (msg.length == 0) {
            msg = ValidateUtils.getMessageOfRequireCheck("staffName", "Tên nhân viên")
        }
        if (msg.length == 0) {
            msg = ValidateUtils.getMessageOfSpecialCharactersValidate("staffName", "Tên nhân viên", Utils._NAME)
        }
        if (msg.length == 0) {
            msg = ValidateUtils.getMessageOfRequireCheck("gender", "Giới t�nh", true)
        }
        var startDate = $("#startDate").val().trim();
        if (msg.length == 0) {
            msg = ValidateUtils.getMessageOfInvalidFormatDate("startDate", "Ngày bắt đầu làm việc")
        }
        var s = $("#education").val().trim();
        if (msg.length == 0 && s.length > 50) {
            msg = "Trình độ chỉ được nh�p tối đa 50 ký tự";
            $("#education").focus()
        }
        var cmnd = $("#idNo").val().trim();
        if (cmnd.length > 0 && msg.length == 0 && !/\d/.test(cmnd)) {
            msg = "CMND chỉ chứa các giá trị số.";
            $("#idNo").focus()
        }
        if (msg.length == 0 && cmnd.length > 40) {
            msg = "CMND chỉ được nh�p tối đa 40 ký tự";
            $("#idNo").focus()
        }
        var idNoDate = $("#idNoDate").val().trim();
        if (msg.length == 0) {
            msg = ValidateUtils.getMessageOfInvalidFormatDate("idNoDate", "Ngày cấp")
        }
        s = $("#idNoPlace").val().trim();
        if (msg.length == 0 && s.length > 250) {
            msg = "Nơi cấp chỉ được nh�p tối đa 250 ký tự";
            $("#idNoPlace").focus()
        }
        s = $("#position").val().trim();
        if (msg.length == 0 && s.length > 50) {
            msg = "Vị tr� chức danh chỉ được nh�p tối đa 50 ký tự";
            $("#position").focus()
        }
        s = $("#houseNumber").val().trim();
        if (msg.length == 0 && s.length > 50) {
            msg = "Số nhà chỉ được nh�p tối đa 50 ký tự";
            $("#houseNumber").focus()
        }
        s = $("#street").val().trim();
        if (msg.length == 0 && s.length > 100) {
            msg = "Nơi cấp chỉ được nh�p tối đa 100 ký tự";
            $("#street").focus()
        }
        var tr = $("#area").combotree("tree");
        var n = tr.tree("getSelected");
        if (msg.length == 0 && n == null) {
            msg = "Bạn chưa ch�?n giá trị cho trư�?ng �?ịa bàn"
        }
        if (msg.length == 0 && n.attributes.area.type != "WARD") {
            msg = "�?ịa bàn phải ch�?n đến cấp phư�?ng/xã"
        }
        var mobi = $("#mobilePhone").val().trim();
        if (mobi.length > 0 && msg.length == 0 && !/\d/.test(mobi)) {
            msg = "Số di động chỉ chứa các giá trị số.";
            $("#mobilePhone").focus()
        }
        if (msg.length == 0 && mobi.length > 20) {
            msg = "Số di động chỉ được nh�p tối đa 20 ký tự";
            $("#mobilePhone").focus()
        }
        var phone = $("#phone").val().trim();
        if (phone.length > 0 && msg.length == 0 && !/\d/.test(phone)) {
            msg = "Số cố định chỉ chứa các giá trị số.";
            $("#phone").focus()
        }
        if (msg.length == 0 && phone.length > 20) {
            msg = "Số cố định chỉ được nh�p tối đa 20 ký tự";
            $("#phone").focus()
        }
        var email = $("#email").val().trim();
        if (email.length > 0 && msg.length == 0) {
            msg = ValidateUtils.getMessageOfInvalidEmailFormat("email", "Email")
        }
        if (msg.length == 0 && email.length > 50) {
            msg = "Số cố định chỉ được nh�p tối đa 50 ký tự";
            $("#email").focus()
        }
        if (msg.length == 0) {
            msg = ValidateUtils.getMessageOfRequireCheck("staffType", "Chức vụ", true)
        }
        if (msg.length == 0) {
            msg = ValidateUtils.getMessageOfRequireCheck("status", "Trạng thái", true)
        }
        if (msg.length > 0) {
            $("#errMsg").html(msg).show();
            return false
        }
        var dataModel = new Object();
        dataModel.id = $("#staffId").val().trim();
        var staffCode = $("#staffCode").val().trim();
        dataModel.staffCode = staffCode;
        dataModel.staffName = $("#staffName").val().trim();
        dataModel.gender = $("#gender").val().trim();
        dataModel.startWorkingDate = startDate;
        dataModel.education = $("#education").val().trim();
        dataModel.idNumber = cmnd;
        dataModel.idNoDate = idNoDate;
        dataModel.idNoPlace = $("#idNoPlace").val().trim();
        dataModel.position = $("#position").val().trim();
        dataModel.houseNumber = $("#houseNumber").val().trim();
        dataModel.street = $("#street").val().trim();
        dataModel.areaId = n.id;
        dataModel.mobilePhone = mobi;
        dataModel.phone = phone;
        dataModel.email = email;
        dataModel.staffType = $("#staffType").val().trim();
        dataModel.status = $("#status").val().trim();
        $.messager.confirm("Xác nh�n", "Bạn có muốn lưu thông tin nhân viên?", function (r) {
            if (r) {
                Utils.saveData(dataModel, "/catalog/staff/save-or-update", Staff._xhrSave, "errMsg", function (data) {
                    if (!data.error) {
                        $("#staffCode").attr("disabled", "disabled");
                        $("#staffCode").val(staffCode.toUpperCase());
                        $("#staffName").focus();
                        history.pushState("", "", "/catalog/distributor/staff/detail?id=" + data.id);
                        $("#staffId").val(data.id);
                        $("#sucMsg").html("Lưu dữ liệu thành công").show();
                        setTimeout(function () {
                            $("#sucMsg").hide()
                        }, 3000)
                    }
                }, "loading2", "")
            }
        });
        return false
    }
};
var MCPCatalog = {
    _mapMultiSelectSub: null,
    _mapMultiSelect: null,
    _xhrSave: null,
    _xhrSearch: null,
    parentsId: null,
    searchFilter: null,
    selectNodeTree: -1,
    isRefresh: false,
    isUpdate: false,
    _idSearch: null,
    _shopCodeSearch: null,
    _mcpCodeSearch: null,
    _nextRoutingCode: null,
    _mcpShopIdSearch: null,
    _mcpId: null,
    _lstRoutingCode: new Map(),
    _idCus: null,
    _mcpIdSelect: -1,
    _title: "",
    _shopCodeExcel: null,
    flag: true,
    search: function (mcpId, isNotSearch) {
        var msg = "";
        $("#errMsg").html("").hide();
        $("#errExcelMsg").html("").hide();
        var node = $("#tree").tree("getSelected");
        if (mcpId == null || mcpId == undefined) {
            if (node != null && node.id != null) {
                mcpId = node.id
            } else {
                mcpId = 0
            }
        } else {
            $("#infoCustomer").html("Danh sách khách hàng")
        }
        var shopCode = MCPCatalog._mcpShopIdSearch;
        var customerCode = $("#customerCode").val().trim();
        var customerName = $("#customerName").val().trim();
        var status = $("#status").val();
        if (msg.length > 0) {
            $("#errMsg").html(msg).show();
            return false
        }
        var houseNumberOrStreet = "";
        var areaId = "";
        var groupId = 0;
        if ($("#chooseGroup").val() != "" && $("#chooseGroup").val().length > 0) {
            groupId = $("#chooseGroup").val()
        }
        $("#grid").datagrid("load", {
            page: 1,
            groupId: groupId,
            shopId: $("#shopIdLogin").val(),
            isNotSearch: isNotSearch,
            mcpId: mcpId,
            customerCode: customerCode,
            customerName: Utils.XSSEncode(customerName),
            status: status,
            houseNumberOrStreet: houseNumberOrStreet,
            areaId: areaId
        });
        if ($("#supervisorUser").val() == "true" && mcpId > 0) {
            MCPCatalog._title = '<a href="javascript:void(0);" onclick="return MCPCatalog.openAddCusInMCPPopup();"><img src="' + WEB_CONTEXT_PATH + '/resources/images/icon_add.png"/></a>';
            $("#btnInsert").css("visibility", "visible");
            $(".datagrid-htable td[field='edit'] .datagrid-cell").html(MCPCatalog._title)
        } else {
            $("#btnInsert").css("visibility", "hidden");
            $(".datagrid-htable td[field='edit'] .datagrid-cell").html("")
        }
    },
    searchMCPTree: function (shopCode) {
        $("#errMsg").html("").hide();
        if (shopCode != null && shopCode != undefined && shopCode != "") {
            MCPCatalog.loadAreaTree(null, shopCode);
            MCPCatalog._shopCodeExcel = shopCode
        } else {
            $("#errMsg").html("Vui lòng ch�?n đơn vị để tìm kiếm").show();
            return false
        }
    },
    openChangeCusInMCPPopup: function (idCus) {
        $("#errMsg").html("").hide();
        $("#errExcelMsg").html("").hide();
        if (idCus != undefined) {
            MCPCatalog._idCus = idCus
        } else {
            if (MCPCatalog._mapMutilSelect == null || MCPCatalog._mapMutilSelect.size() <= 0) {
                $("#errMsg").html("Bạn chưa ch�?n khách hàng nào. Yêu cầu ch�?n").show();
                return false
            }
        }
        $("#changeCusInMCPPopupDIV").css("visibility", "visible");
        $("#errMsgPopup3").hide();
        var html = $("#changeCusInMCPPopup").html();
        $("#changeCusInMCPPopup").dialog({
            closed: false,
            cache: false,
            modal: true,
            position: "middle",
            center: true,
            onOpen: function () {
                $(".easyui-dialog #mcpidCBX").customStyle();
                var groupId = 0;
                if ($("#chooseGroup").val() != "" && $("#chooseGroup").val().length > 0) {
                    groupId = $("#chooseGroup").val()
                }
                $.getJSON("/rest/catalog/get-list-routing/" + $("#shopIdLogin").val() + "/" + groupId + "/list.json", function (data) {
                    var arrHtml = new Array();
                    for (var i = 0; i < data.length; i++) {
                        arrHtml.push('<option value="' + data[i].value + '">' + data[i].name + "</option>")
                    }
                    $("#mcpidCBX").html($("#mcpidCBX").html() + arrHtml.join(""));
                    $("#mcpidCBX").change()
                })
            },
            onClose: function () {
                MCPCatalog._idCus = null;
                $("#changeCusInMCPPopup").html(html);
                $("#changeCusInMCPPopupDIV").css("visibility", "hidden")
            }
        });
        return false
    },
    insertCusToMCP: function () {
        var dataModel = new Object();
        if (MCPCatalog._idCus != null) {
            dataModel.lstCusId = MCPCatalog._idCus
        } else {
            if (MCPCatalog._mapMutilSelect == null || MCPCatalog._mapMutilSelect.size() <= 0) {
                $("#errMsgPopup3").html("Bạn chưa ch�?n khách hàng nào. Yêu cầu ch�?n").show();
                return false
            }
            var mapKey = MCPCatalog._mapMutilSelect.keyArray;
            var mapValue = MCPCatalog._mapMutilSelect.valArray;
            dataModel.lstCusId = mapValue
        }
        var mcpidCBX = $("#mcpidCBX").val();
        if (MCPCatalog._mcpIdSelect == mcpidCBX) {
            $("#errMsgPopup3").html("MCPID mới không được trùng với MCPID cũ").show();
            return false
        }
        dataModel.mcpId = $("#mcpidCBX").val();
        MCPCatalog.saveCus(dataModel)
    },
    initEditMCP: function (isCreate) {
        $("#errMsgTree").html("").hide();
        MCPCatalog._mcpCodeSearch = null;
        MCPCatalog._mcpCodeSearch = $("#mcpSearchCode").val();
        $("#addNewMCPPopupDIV").css("visibility", "visible");
        $("#mcpCode").attr("disabled", false);
        $("#mcpCode").val("");
        $("#mcpName").val("");
        $("#mcpCode").focus();
        var html = $("#addNewMCPPopup").html();
        $("#addNewMCPPopup").dialog({
            closed: false,
            cache: false,
            modal: true,
            position: "middle",
            center: true,
            onOpen: function () {
                $(".easyui-dialog #saleStaffDlg").customStyle();
                var groupId = 0;
                if ($("#chooseGroup").val() != "" && $("#chooseGroup").val().length > 0) {
                    groupId = $("#chooseGroup").val()
                }
                $.getJSON("/rest/catalog/sale-staff/" + currentUser + "/" + groupId + "/list.json", function (data) {
                    var arrHtml = new Array();
                    for (var i = 0; i < data.length; i++) {
                        arrHtml.push('<option value="' + data[i].value + '">' + data[i].name + "</option>")
                    }
                    $("#saleStaffDlg").html($("#saleStaffDlg").html() + arrHtml.join(""));
                    $("#saleStaffDlg").change()
                });
                if (isCreate) {
                    $("#btnEditMCP").html("Tạo mới");
                    MCPCatalog.flag = true;
                    $("#errMsgMCPAddPopup").hide()
                } else {
                    $("#btnEditMCP").html("C�p nh�t");
                    MCPCatalog.flag = false;
                    var node = $("#tree").tree("getSelected");
                    if (node != null && node.id > 0) {
                        setTimeout(function () {
                            $.getJSON("/rest/catalog/routing-info/" + node.id + ".json", function (data) {
                                $("#mcpCode").val(data.content1);
                                $("#mcpName").val(data.content2);
                                if (data != null && data != undefined && data.content3 != undefined) {
                                    $("#saleStaffDlg").val(parseInt(data.content3));
                                    $("#saleStaffDlg").change()
                                }
                            })
                        }, 500)
                    }
                }
            },
            onBeforeClose: function () {
            },
            onClose: function () {
                $("#addNewMCPPopup").html(html);
                $("#addNewMCPPopupDIV").css("visibility", "hidden")
            }
        });
        return false
    },
    editMCP: function () {
        $("#errMsgMCPAddPopup").html("").hide();
        var msg = "";
        msg = Utils.getMessageOfRequireCheck("mcpCode", "Mã tuyến");
        if (msg.length == 0) {
            msg = Utils.getMessageOfSpecialCharactersValidate("mcpCode", "Mã tuyến", Utils._CODE)
        }
        if (msg.length == 0) {
            msg = Utils.getMessageOfRequireCheck("mcpName", "Tên tuyến")
        }
        if (msg.length == 0) {
            msg = Utils.getMessageOfSpecialCharactersValidate("mcpName", "Tên tuyến", Utils._NAME)
        }
        if (msg.length == 0) {
            msg = Utils.getMessageOfRequireCheck("saleStaffDlg", "NVBH", true)
        }
        if (msg.length > 0) {
            $("#errMsgMCPAddPopup").html(msg).show();
            return false
        }
        var dataModel = new Object();
        dataModel.mcpCode = $("#mcpCode").val().trim();
        dataModel.mcpNewText = $("#mcpName").val().trim();
        dataModel.staffId = $("#saleStaffDlg").val();
        dataModel.shopId = $("#shopIdLogin").val();
        if (!MCPCatalog.flag) {
            var node = $("#tree").tree("getSelected");
            if (node != null && node != undefined) {
                dataModel.routingId = node.id
            }
        }
        Utils.addOrSaveData(dataModel, "/catalog/mcp/editMCP", MCPCatalog._xhrSave, "errMsgMCPAddPopup", function (data) {
            if (!data.error) {
                $("#addNewMCPPopup").dialog("close");
                MCPCatalog.loadAreaTree(0, null);
                $("#successMsgTree").html("Thêm mới dữ liệu thành công").show();
                setTimeout(function () {
                    $("#successMsgTree").html("").hide()
                }, 4000)
            } else {
                $("#errMsgMCPAddPopup").html(data.errMsg).show()
            }
        })
    },
    loadTreeEx: function (idSearch) {
        MCPCatalog.loadAreaTree(idSearch)
    },
    loadAreaTree: function (mcpId, shopCode) {
        $("#errExcelMsg").html("").hide();
        if (mcpId == null) {
            mcpId = 0
        }
        if (shopCode != undefined && shopCode != null && shopCode != "") {
            MCPCatalog._shopCodeSearch = shopCode;
            MCPCatalog._mcpShopIdSearch = shopCode
        }
        var groupId = 0;
        if ($("#chooseGroup").val() != "" && $("#chooseGroup").val().length > 0) {
            groupId = $("#chooseGroup").val()
        }
        $("#tree").tree({
            url: "/rest/catalog/mcpid-tree/combotree/" + $("#shopIdLogin").val() + "/" + groupId + ".json",
            lines: true,
            formatter: function (node) {
                return Utils.XSSEncode(node.text)
            },
            onContextMenu: function (e, node) {
                e.preventDefault();
                if ($("#supervisorUser").val() == "true") {
                    $("#tree").tree("select", node.target);
                    $("#contextMenu").menu("show", {left: e.pageX - 5, top: e.pageY - 5});
                    $("#contextMenu").css("height", "auto")
                }
            },
            onBeforeLoad: function (n, p) {
                if (MCPCatalog._shopCodeSearch != null && MCPCatalog._shopCodeSearch != "") {
                    p.shopCode = MCPCatalog._shopCodeSearch;
                    $("#divOverlay").show()
                }
            },
            onLoadSuccess: function (parent, data) {
                MCPCatalog._nextRoutingCode = null;
                if (MCPCatalog._idSearch != null) {
                    try {
                        var id = MCPCatalog._idSearch;
                        var node = $("#tree").tree("find", id);
                        if (node != null) {
                            $("#tree").tree("select", node.target)
                        }
                    } catch (e) {
                    }
                    MCPCatalog._idSearch = null;
                    $("#divOverlay").hide()
                } else {
                    if (MCPCatalog._shopCodeSearch != null) {
                        try {
                            var shopCode = MCPCatalog._shopCodeSearch;
                            var node = $("#tree").tree("find", shopCode);
                            if (node != null) {
                                $("#tree").tree("select", node.target)
                            }
                        } catch (e) {
                        }
                        MCPCatalog._shopCodeSearch = null;
                        $("#divOverlay").hide()
                    }
                }
                if (data != null && data[0] != null && data[0].children != null && data[0].children[0] != undefined) {
                    MCPCatalog._nextRoutingCode = data[0].children[0].nextRoutingCode
                } else {
                    if (data != null && data[0] != undefined && data[0] != null) {
                        MCPCatalog._nextRoutingCode = data[0].nextRoutingCode
                    }
                }
            },
            onClick: function (node) {
                $("#errMsg").html("").hide();
                if ($("#grid").length == 1 && node != null && node.id != null) {
                    MCPCatalog._mapMutilSelect = new Map();
                    if (node.id == -2) {
                        MCPCatalog._mcpShopIdSearch = node.attributes.shop.shopCode
                    }
                    MCPCatalog.search(node.id);
                    MCPCatalog._mcpIdSelect = node.id;
                    $("#infoCustomer").html("Danh sách khách hàng của " + node.text)
                }
            }
        })
    },
    getGridCusUrl: function (cusCode, cusName, channelTypeId, address, areaId, mcpId) {
        return WEB_CONTEXT_PATH +"/catalog/mcp/searchCus?customerCode=" + encodeChar(cusCode) + "&customerName=" + encodeChar(cusName) + "&channelTypeId=" + channelTypeId + "&houseNumberOrStreet=" + address + "&areaId=" + areaId
    },
    searchCus: function () {
        var customerCode = $("#cusCode").val().trim();
        var customerName = $("#cusName").val().trim();
        var houseNumberOrStreet = "";
        var areaId = "";
        var url = MCPCatalog.getGridCusUrl(customerCode, customerName, -1, houseNumberOrStreet, areaId);
        MCPCatalog._mapMutilSelectSub = new Map();
        $("#gridCus").datagrid({
            url: url,
            pageList: [10, 20, 30],
            width: 750,
            pageSize: 10,
            checkOnSelect: true,
            height: "auto",
            scrollbarSize: 0,
            pagination: true,
            pageNumber: 1,
            fitColumns: true,
            method: "GET",
            rownumbers: true,
            columns: [[{
                field: "customerCode",
                title: "Mã KH",
                width: 70,
                sortable: false,
                resizable: false,
                align: "left",
                formatter: function (data, row, index) {
                    return row.customerCode
                }
            }, {
                field: "customerName",
                title: "Tên KH",
                width: 130,
                sortable: false,
                resizable: false,
                align: "left",
                formatter: function (data, row, index) {
                    return row.customerName
                }
            }, {
                field: "address",
                title: "�?ịa chỉ",
                width: 300,
                sortable: false,
                resizable: false,
                align: "left",
                formatter: function (data, row, index) {
                    return row.address
                }
            }, {
                field: "id",
                title: "",
                checkbox: true,
                width: 50,
                align: "center",
                sortable: false,
                resizable: false
            },]],
            onSelect: function (rowIndex, rowData) {
                var selectedId = rowData.id;
                MCPCatalog._mapMutilSelectSub.put(selectedId, rowData.id)
            },
            onUnselect: function (rowIndex, rowData) {
                var selectedId = rowData.id;
                MCPCatalog._mapMutilSelectSub.remove(selectedId)
            },
            onSelectAll: function (rows) {
                if ($.isArray(rows)) {
                    for (var i = 0; i < rows.length; i++) {
                        var row = rows[i].id;
                        var selectedId = rows[i].id;
                        MCPCatalog._mapMutilSelectSub.put(selectedId, row)
                    }
                }
            },
            onUnselectAll: function (rows) {
                if ($.isArray(rows)) {
                    for (var i = 0; i < rows.length; i++) {
                        var row = rows[i];
                        var selectedId = row.id;
                        MCPCatalog._mapMutilSelectSub.remove(selectedId)
                    }
                }
            },
            onLoadSuccess: function () {
                var easyDiv = "#gridCusContainer ";
                $(easyDiv + ".datagrid-header-rownumber").html("STT");
                var exitsAll = false;
                var runner = 0;
                $(easyDiv + "input:checkbox[name=id]").each(function () {
                    var selectedId = this.value;
                    if (MCPCatalog._mapMutilSelectSub.get(selectedId) != null || MCPCatalog._mapMutilSelectSub.get(selectedId) != undefined) {
                        exitsAll = true;
                        $("#gridCus").datagrid("selectRow", runner)
                    }
                    runner++
                });
                if (exitsAll == false) {
                    $(easyDiv + "td[field=id] .datagrid-header-check input:checkbox").attr("checked", false)
                }
                var tabindex = -1;
                $(".InputTextStyle, select, input, button , li , tr, td, th, label, ul, a, img").each(function () {
                    if (this.type != "hidden") {
                        $(this).attr("tabindex", tabindex);
                        tabindex -= 1
                    }
                });
                tabindex = 1;
                $(".easyui-dialog input,.easyui-dialog select,.easyui-dialog button").each(function () {
                    if (this.type != "hidden") {
                        $(this).attr("tabindex", "");
                        tabindex++
                    }
                });
                updateRownumWidthForDataGrid("#gridCus");
                $(window).resize()
            }
        })
    },
    openAddCusInMCPPopup: function () {
        $("#addCusInMCPPopupDIV").css("visibility", "visible");
        $("#addCusInMCPPopup").dialog("open");
        $("#errMsgPopup1").hide();
        $("#errExcelMsg").html("").hide();
        MCPCatalog._mapMutilSelectSub = new Map();
        $("#cusCode").val("");
        $("#cusName").val("");
        $("#adrress").val("");
        $("#cusCode").focus();
        var url = MCPCatalog.getGridCusUrl("", "", "-1", "", "");
        $("#gridCus").datagrid({
            url: url,
            pageList: [10, 20, 30],
            width: 750,
            pageSize: 10,
            checkOnSelect: true,
            height: "auto",
            scrollbarSize: 0,
            pagination: true,
            pageNumber: 1,
            fitColumns: true,
            method: "GET",
            rownumbers: true,
            columns: [[{
                field: "customerCode",
                title: "Mã KH",
                width: 70,
                sortable: false,
                resizable: false,
                align: "left",
                formatter: function (data, row, index) {
                    return row.customerCode
                }
            }, {
                field: "customerName",
                title: "Tên KH",
                width: 130,
                sortable: false,
                resizable: false,
                align: "left",
                formatter: function (data, row, index) {
                    return row.customerName
                }
            }, {
                field: "address",
                title: "�?ịa chỉ",
                width: 300,
                sortable: false,
                resizable: false,
                align: "left",
                formatter: function (data, row, index) {
                    return row.address
                }
            }, {
                field: "id",
                title: "",
                checkbox: true,
                width: 50,
                align: "center",
                sortable: false,
                resizable: false
            },]],
            onSelect: function (rowIndex, rowData) {
                var selectedId = rowData.id;
                MCPCatalog._mapMutilSelectSub.put(selectedId, rowData.id)
            },
            onUnselect: function (rowIndex, rowData) {
                var selectedId = rowData.id;
                MCPCatalog._mapMutilSelectSub.remove(selectedId)
            },
            onSelectAll: function (rows) {
                if ($.isArray(rows)) {
                    for (var i = 0; i < rows.length; i++) {
                        var row = rows[i].id;
                        var selectedId = rows[i].id;
                        MCPCatalog._mapMutilSelectSub.put(selectedId, row)
                    }
                }
            },
            onUnselectAll: function (rows) {
                if ($.isArray(rows)) {
                    for (var i = 0; i < rows.length; i++) {
                        var row = rows[i];
                        var selectedId = row.id;
                        MCPCatalog._mapMutilSelectSub.remove(selectedId)
                    }
                }
            },
            onLoadSuccess: function () {
                var easyDiv = "#gridCusContainer ";
                $(easyDiv + ".datagrid-header-rownumber").html("STT");
                var exitsAll = false;
                var runner = 0;
                $(easyDiv + "input:checkbox[name=id]").each(function () {
                    var selectedId = this.value;
                    if (MCPCatalog._mapMutilSelectSub.get(selectedId) != null || MCPCatalog._mapMutilSelectSub.get(selectedId) != undefined) {
                        exitsAll = true;
                        $("#gridCus").datagrid("selectRow", runner)
                    }
                    runner++
                });
                if (exitsAll == false) {
                    $(easyDiv + "td[field=id] .datagrid-header-check input:checkbox").attr("checked", false)
                }
                var tabindex = -1;
                $(".InputTextStyle, select, input, button , li , tr, td, th, label, ul, a, img").each(function () {
                    if (this.type != "hidden") {
                        $(this).attr("tabindex", tabindex);
                        tabindex -= 1
                    }
                });
                tabindex = 1;
                $(".easyui-dialog input,.easyui-dialog select,.easyui-dialog button").each(function () {
                    if (this.type != "hidden") {
                        $(this).attr("tabindex", "");
                        tabindex++
                    }
                });
                updateRownumWidthForDataGrid("#gridCus");
                $(window).resize()
            }
        });
        return false
    },
    saveCusInMCP: function () {
        $("#errMsgPopup1").html("").hide();
        if (MCPCatalog._mcpIdSelect < 0) {
            $("#errMsgPopup1").html("Bạn chưa ch�?n tuyến nào. Yêu cầu ch�?n").show();
            return false
        }
        if (MCPCatalog._mapMutilSelectSub == null || MCPCatalog._mapMutilSelectSub.size() <= 0) {
            $("#errMsgPopup1").html("Bạn chưa ch�?n khách hàng nào. Yêu cầu ch�?n").show();
            return false
        }
        var mapKey = MCPCatalog._mapMutilSelectSub.keyArray;
        var mapValue = MCPCatalog._mapMutilSelectSub.valArray;
        var dataModel = new Object();
        dataModel.lstCusId = mapValue;
        dataModel.mcpId = MCPCatalog._mcpIdSelect;
        MCPCatalog.saveCus(dataModel)
    },
    saveCus: function (dataModel) {
        Utils.addOrSaveData(dataModel, "/catalog/mcp/save", null, "errMsg", function (data) {
            if (data.errMsg != undefined && data.errMsg.length == 0) {
                $("#addCusInMCPPopup").dialog("close");
                $("#changeCusInMCPPopup").dialog("close");
                $("#successMsg").html("Lưu dữ liệu thành công").show();
                setTimeout(function () {
                    $("#successMsg").html("").hide()
                }, 1500);
                MCPCatalog._mapMutilSelect = new Map();
                $("#grid").datagrid("reload")
            }
        })
    },
    getGridCusMCPIDUrl: function (cusCode) {
        return WEB_CONTEXT_PATH +"/catalog/mcp/searchHisoryMCP?customerCode=" + cusCode
    },
    openViewHistoryCusInMCPPopup: function (customerId, customerCode, customerName, address, type) {
        $("#viewHistoryCusInMCPPopupDIV").css("visibility", "visible");
        $("#viewHistoryCusInMCPPopup").dialog("open");
        $("#errMsgPopup2").hide();
        $("#cusCodeLabel").html(Utils.XSSEncode(customerCode));
        $("#cusNameLabel").html(Utils.XSSEncode(customerName));
        $("#addressLabel").html(Utils.XSSEncode(address));
        $("#typeLabel").html(type);
        var url = MCPCatalog.getGridCusMCPIDUrl(customerCode);
        $("#gridCusMCPID").datagrid({
            url: url,
            pageList: [10, 20, 30],
            width: 500,
            pageSize: 10,
            height: "auto",
            scrollbarSize: 0,
            pagination: true,
            pageNumber: 1,
            fitColumns: true,
            method: "GET",
            rownumbers: true,
            columns: [[{
                field: "routingCode",
                title: "Mã tuyến",
                width: 200,
                sortable: false,
                resizable: false,
                align: "left",
                formatter: function (data, row, index) {
                    if (row.routing != null) {
                        return row.routing.routingCode
                    }
                }
            }, {
                field: "fromDate",
                title: "Từ ngày",
                width: 150,
                sortable: false,
                resizable: false,
                align: "left",
                formatter: function (value, row, index) {
                    if (row.fromDate != null) {
                        return toDateString(new Date(row.fromDate))
                    }
                }
            }, {
                field: "toDate",
                title: "�?ến ngày",
                width: 150,
                sortable: false,
                resizable: false,
                align: "left",
                formatter: function (value, row, index) {
                    if (row.toDate != null) {
                        return toDateString(new Date(row.toDate))
                    }
                }
            },]],
            onLoadSuccess: function () {
                var easyDiv = "#gridCusContainer ";
                $(easyDiv + ".datagrid-header-rownumber").html("STT");
                updateRownumWidthForDataGrid("#gridCus");
                $(window).resize()
            }
        });
        return false
    },
    upload: function () {
        $("#errExcelMsg").html("").hide();
        $("#errMsg").html("").hide();
        if ($("#excelFile").val() == "") {
            $("#errExcelMsg").html("Vui lòng ch�?n file Excel.").show();
            return false
        }
        var params = new Object();
        params.token = $("#token").val().trim();
        var options = {
            beforeSubmit: MCPCatalog.beforeImportExcelEx,
            success: MCPCatalog.afterImportExcelEx,
            type: "POST",
            dataType: "html",
            data: params
        };
        $("#importFrm").ajaxForm(options);
        $.messager.confirm("Xác nh�n", "Bạn có muốn nh�p từ file excel ?", function (r) {
            if (r) {
                var type = $('input[name="mcpType"]:checked').val();
                $("#typeExport").val(type);
                $("#divOverlay").show();
                $("#importFrm").submit()
            }
        });
        return false
    },
    beforeImportExcelEx: function () {
        $("#errExcelMsg").html("").hide();
        return true
    },
    afterImportExcelEx: function (responseText, statusText, xhr, $form) {
        if (statusText == "success") {
            $("#divOverlay").hide();
            $("#responseDiv").html(responseText);
            var responseToken = $("#responseToken").html().trim();
            if (responseToken != undefined && responseToken != null && responseToken != "") {
                $("#token").val(responseToken)
            }
            if ($("#errorExcelMsg").html().length > 0) {
                $("#errExcelMsg").html($("#errorExcelMsg").html()).show()
            } else {
                var totalRow = parseInt($("#totalRow").html().trim());
                var numFail = parseInt($("#numFail").html().trim());
                var fileNameFail = $("#fileNameFail").html();
                var mes = format(msgErr_result_import_excel, (totalRow - numFail), numFail);
                if (totalRow < numFail) {
                    mes = "Hệ thống không import thành công vì có " + numFail + " dòng lỗi."
                }
                if (numFail > 0) {
                    mes += ' <a href="' + fileNameFail + '">Xem chi tiết lỗi</a>'
                }
                $("#errExcelMsg").html(mes).show()
            }
        }
    },
    beforeImportExcel: function () {
        if (!previewImportExcelFile(document.getElementById("excelFile"))) {
            return false
        }
        $("#errExcelMsg").html("").hide();
        $("#successMsg1").html("").hide();
        return true
    },
    afterImportExcelUpdate: function (responseText, statusText, xhr, $form) {
        $("#divOverlay").hide();
        if (statusText == "success") {
            $("#responseDiv").html(responseText);
            if ($("#errorExcel").html().trim() == "true" || $("#errorExcelMsg").html().trim().length > 0) {
                $("#errExcelMsg").html($("#errorExcelMsg").html()).show()
            } else {
                var totalRow = parseInt($("#totalRow").html().trim());
                var numFail = parseInt($("#numFail").html().trim());
                var fileNameFail = $("#fileNameFail").html();
                var mes = format(msgErr_result_import_excel, (totalRow - numFail), numFail);
                if (totalRow < numFail) {
                    mes = "Hệ thống import " + numFail + " dòng không hợp lệ."
                }
                if (numFail > 0) {
                    mes += ' <a href="' + fileNameFail + '">Xem chi tiết lỗi</a>'
                }
                if ($("#excelFile").length != 0 && $("#fakefilepc").length != 0) {
                    try {
                        $("#excelFile").val("");
                        $("#fakefilepc").val("")
                    } catch (err) {
                    }
                }
                $("#errExcelMsg").html(mes).show();
                $("#grid").datagrid("reload")
            }
        }
    },
    exportData: function () {
        var value = $('input[name="mcpType"]:checked').val();
        if (value == "mcpCode") {
            MCPCatalog.exportMCPCode()
        } else {
            MCPCatalog.exportMCPCustomer()
        }
    },
    exportMCPCode: function () {
        if (MCPCatalog._shopCodeExcel != null && MCPCatalog._shopCodeExcel != undefined && MCPCatalog._shopCodeExcel != "") {
        } else {
            $("#errMsg").html("Vui lòng ch�?n đơn vị để xuất excel").show();
            return false
        }
        $("#errExcelMsg").html("").hide();
        var shopCode = MCPCatalog._shopCodeExcel.trim();
        var params = new Object();
        params.shopCode = shopCode;
        params.mcpId = MCPCatalog._mcpIdSelect;
        var url = "/catalog/mcp/exportMCPCode";
        $.messager.confirm("Xác nh�n", "Bạn có muốn xuất file Excel", function (r) {
            if (r) {
                CommonSearch.exportExcelData(params, url, "errExcelMsg")
            }
        })
    },
    exportMCPCustomer: function () {
        $("#errExcelMsg").html("").hide();
        var shopCode = MCPCatalog._mcpShopIdSearch;
        var customerCode = $("#customerCode").val().trim();
        var customerName = $("#customerName").val().trim();
        var status = $("#status").val();
        var houseNumberOrStreet = $("#houseNumberOrStreet").val().trim();
        var areaId = $("#areaId").val();
        var mcpId = MCPCatalog._mcpIdSelect;
        var params = new Object();
        params.shopCode = shopCode;
        params.customerCode = customerCode;
        params.customerName = customerName;
        params.status = status;
        params.houseNumberOrStreet = houseNumberOrStreet;
        params.areaId = areaId;
        params.mcpId = mcpId;
        var url = "/catalog/mcp/exportMCPCustomer";
        $.messager.confirm("Xác nh�n", "Bạn có muốn xuất file Excel", function (r) {
            if (r) {
                CommonSearch.exportExcelData(params, url, "errExcelMsg")
            }
        })
    },
    removeRouting: function () {
        $.messager.confirm("Xác nh�n", "Bạn có muốn xóa tuyến không?", function (r) {
            if (r) {
                var node = $("#tree").tree("getSelected");
                if (node != null) {
                    var dataModel = new Object();
                    dataModel.routingId = node.id;
                    Utils.addOrSaveData(dataModel, "/catalog/mcp/remove-routing", MCPCatalog._xhrSave, null, function (data) {
                        $("#tree").tree("reload");
                        $("#grid").datagrid("reload")
                    }, null, null, true);
                    return false
                }
            }
        })
    }
};
var UnitTreeCatalog = {
    _xhrSave: null,
    _listNodeTree: null,
    _idGroup: 1,
    _lstGroupAdd: null,
    _lstGroupDelete: null,
    _lstGroupChange: null,
    _lstStaffAdd: null,
    _lstStaffDelete: null,
    _typeScreen: 0,
    _staffOwnerId: 0,
    _zoom: 18,
    _nodeSelect: null,
    _callBack: null,
    _idSearch: null,
    _idSearchStaff: null,
    _idGroupAddNewStaff: null,
    _idOrgAddNewStaff: null,
    _typeAddGroup: null,
    _reload: null,
    _itv: null,
    _staffId: null,
    _maxAdmin: 9999,
    _maxGDM: 1,
    _maxGSKV: 1,
    _maxGDBH: 1,
    _maxDDTM: 9999,
    NOLIMIT: 9999,
    ERROR: -1,
    Admin: 1,
    GDM: 2,
    GSKV: 3,
    GSBH1: 4,
    GSBH2: 5,
    GSBH: 45,
    DDTM: 6,
    NVBH1: 7,
    NVBH2: 8,
    NVBH: 78,
    CD: 1,
    MIEN: 2,
    KHUVUC: 3,
    NPP: 4,
    SHOP: 1,
    STAFF: 2,
    GROUP: 3,
    _tree: null,
    _oldNode: null,
    _lat: null,
    _lng: null,
    _isSaveOrUpdateStaffGroup: null,
    hideAllContextMenu: function () {
        $("#cmTaoNhom").hide();
        $("#cmTaoMoiGSBH").hide();
        $("#cmThemNVBH").hide();
        $("#cmTaoMoiNVBH").hide();
        $("#cmThemGSBH").hide();
        $("#cmXoaNhom").hide();
        $("#cmXoaNV").hide()
    },
    showContextMenu: function (type, objectType, node, count) {
        var node = $("#tree").tree("getSelected");
        if (objectType == 1) {
            $("#cmTaoNhom").show()
        } else {
            if (objectType == 2) {
                $("#cmXoaNV").show()
            } else {
                if (objectType == 3) {
                    if (node.children != null) {
                        if (!UnitTreeCatalog.checkGSOnGroup(node)) {
                            $("#cmTaoMoiGSBH").show();
                            $("#cmThemGSBH").show()
                        }
                    } else {
                        $("#cmTaoMoiGSBH").show();
                        $("#cmThemGSBH").show();
                        $("#cmXoaNhom").show()
                    }
                    $("#cmThemNVBH").show();
                    $("#cmTaoMoiNVBH").show()
                }
            }
        }
        return true
    },
    filterContextMenu: function (node, count) {
        if (node.attributes == null) {
            return false
        }
        UnitTreeCatalog.hideAllContextMenu();
        if (node.attributes.shopTreeVO != null) {
            return UnitTreeCatalog.showContextMenu(node.attributes.shopTreeVO.shopTypeId, 1, node, count)
        } else {
            if (node.attributes.staffTreeVO != null) {
                return UnitTreeCatalog.showContextMenu(node.attributes.staffTreeVO.staffTypeId, 2, node, count)
            } else {
                if (node.attributes.staffGroupVO != null) {
                    return UnitTreeCatalog.showContextMenu(node.attributes.staffGroupVO, 3, node, count)
                } else {
                    return false
                }
            }
        }
    },
    getParentNode: function (node, tree) {
        if (tree.children == null) {
            return null
        }
        for (var i = 0; i < tree.children.length; i++) {
            var n = tree.children[i];
            if ((n.id == node.id || (n.id.indexOf(node.id) != -1 && n.id.indexOf("g") != -1)) && UnitTreeCatalog.isSameTypeNode(n, node)) {
                return tree
            }
            var pn = UnitTreeCatalog.getParentNode(node, n);
            if (pn != null) {
                return pn
            }
        }
        return null
    },
    isSameTypeNode: function (n1, n2) {
        if (n1.attributes != null && n2.attributes != null) {
            if ((n1.attributes.staffTreeVO != null && n1.attributes.shopTreeVO == null && n1.attributes.staffGroupVO == null && n2.attributes.staffTreeVO != null && n2.attributes.shopTreeVO == null && n2.attributes.staffGroupVO == null) || (n1.attributes.staffTreeVO == null && n1.attributes.shopTreeVO != null && n1.attributes.staffGroupVO == null && n2.attributes.staffTreeVO == null && n2.attributes.shopTreeVO != null && n2.attributes.staffGroupVO == null) || (n1.attributes.staffTreeVO == null && n1.attributes.shopTreeVO == null && n1.attributes.staffGroupVO != null && n2.attributes.staffTreeVO == null && n2.attributes.shopTreeVO == null && n2.attributes.staffGroupVO != null)) {
                return true
            }
        } else {
            return false
        }
    },
    getNodeInTree: function (nid, tree, nodeType) {
        if (nid == UnitTreeCatalog._tree.id) {
            return UnitTreeCatalog._tree
        }
        if (tree.children == null) {
            return null
        }
        for (var i = 0; i < tree.children.length; i++) {
            var n = tree.children[i];
            if (n.id == nid) {
                if (nodeType != undefined && nodeType != null) {
                    if ((nodeType == UnitTreeCatalog.SHOP && n.attributes.shopTreeVO != null) || (nodeType == UnitTreeCatalog.STAFF && n.attributes.staffTreeVO != null) || (nodeType == UnitTreeCatalog.GROUP && n.attributes.staffGroupVO != null)) {
                        return n
                    }
                } else {
                    return n
                }
            }
            var nn = UnitTreeCatalog.getNodeInTree(nid, n, nodeType);
            if (nn != null) {
                return nn
            }
        }
        return null
    },
    reloadUnitTree: function () {
        if (UnitTreeCatalog._idOrgAddNewStaff != null) {
            UnitTreeCatalog.loadUnitTree(UnitTreeCatalog._idOrgAddNewStaff)
        } else {
            var node = $("#tree").tree("getSelected");
            if (node != null && node.attributes != null) {
                var attr = node.attributes;
                if (attr.org != null) {
                    UnitTreeCatalog.loadUnitTree(attr.org.id)
                } else {
                    if (attr.group != null) {
                        UnitTreeCatalog.loadUnitTree(attr.group.org.id)
                    } else {
                        if (attr.staff != null) {
                            UnitTreeCatalog.loadUnitTree(attr.staff.org.id)
                        } else {
                            UnitTreeCatalog.loadUnitTree()
                        }
                    }
                }
            } else {
                UnitTreeCatalog.loadUnitTree()
            }
        }
    },
    loadUnitTree: function (idSearch, idSearchStaff, ownStaffId, openId) {
        UnitTreeCatalog._listNodeTree = new Map();
        UnitTreeCatalog._lstGroupAdd = new Map();
        UnitTreeCatalog._lstStaffAdd = new Map();
        UnitTreeCatalog._lstStaffDelete = new Map();
        UnitTreeCatalog._lstGroupChange = new Map();
        UnitTreeCatalog._lstGroupDelete = new Map();
        UnitTreeCatalog._idOrgAddNewStaff = null;
        if (idSearch != undefined && idSearch != null && idSearch != 0) {
            UnitTreeCatalog._idSearch = idSearch;
            if (idSearchStaff != undefined && idSearchStaff != null && idSearchStaff != 0) {
                UnitTreeCatalog._idSearchStaff = idSearchStaff
            }
        }
        $("#tree").tree({
            url: "/catalog/unit-tree/get-unit-tree",
            dnd: true,
            lines: true,
            singleSelect: false,
            onBeforeLoad: function (n, p) {
                if (p.id != undefined) {
                    return false
                }
                $("#divOverlay").show();
                if (UnitTreeCatalog._idSearch != null && UnitTreeCatalog._idSearch != 0) {
                    p.idSearch = UnitTreeCatalog._idSearch;
                    $("#divOverlay").show()
                }
            },
            onLoadSuccess: function (parent, data) {
                UnitTreeCatalog._tree = data[0];
                if (UnitTreeCatalog._idSearch != null) {
                    try {
                        var id = UnitTreeCatalog._idSearch;
                        if (UnitTreeCatalog._idSearchStaff != null && UnitTreeCatalog._idSearchStaff != 0) {
                            id = "s" + UnitTreeCatalog._idSearchStaff
                        }
                        var node = $("#tree").tree("find", id);
                        if (node != null) {
                            $("#tree").tree("select", node.target)
                        }
                    } catch (e) {
                    }
                    UnitTreeCatalog._idSearch = null
                }
                if (UnitTreeCatalog._typeAddGroup != null) {
                    UnitTreeCatalog.addNewGroup(UnitTreeCatalog._typeAddGroup)
                }
                UnitTreeCatalog.resize();
                if (openId != null && openId != -1) {
                    UnitTreeCatalog.expandToNode(openId)
                }
                if (ownStaffId != undefined) {
                    if (ownStaffId.toString().indexOf("g") != -1) {
                        UnitTreeCatalog.updateStaffOwner(ownStaffId.substring(1), true)
                    } else {
                        UnitTreeCatalog.updateStaffOwner(ownStaffId, false)
                    }
                }
                $("#divOverlay").hide()
            },
            formatter: function (node) {
                return node.text
            },
            onContextMenu: function (e, node) {
                e.preventDefault();
                $("#tree").tree("select", node.target);
                if (UnitTreeCatalog.filterContextMenu(node)) {
                    $("#contextMenu").menu("show", {left: e.pageX - 5, top: e.pageY - 5});
                    $("#contextMenu").css("height", "auto")
                }
            },
            onCollapse: function (node) {
                UnitTreeCatalog.resize()
            },
            onExpand: function (node) {
                UnitTreeCatalog.resize()
            },
            onClick: function (node) {
                if ($("#searchStaffUnitTreeGrid").length == 1 && node != null && node.attributes != null && (node.attributes.staffGroupVO != null || node.attributes.shopTreeVO != null)) {
                    UnitTreeCatalog.search(0)
                } else {
                    if (node.attributes.staffGroupVO != null || node.attributes.shopTreeVO != null) {
                        UnitTreeCatalog.showSearchScreen()
                    }
                }
            },
            onDblClick: function (node) {
                if (node != null && node.attributes != null) {
                    if (node.attributes.staffTreeVO != null) {
                        var pNode = UnitTreeCatalog.getParentNode(node, UnitTreeCatalog._tree);
                        if (pNode.id.indexOf("g") != -1) {
                            pNode = UnitTreeCatalog.getParentNode(pNode, UnitTreeCatalog._tree)
                        }
                        UnitTreeCatalog.showStaffEditScreen(node.attributes.staffTreeVO.staffId, 1, node.attributes.staffTreeVO.staffTypeId, pNode.id)
                    } else {
                        if (node.attributes.staffGroupVO != null) {
                            UnitTreeCatalog.dialogCreateStaffGroup(node.attributes.staffGroupVO)
                        } else {
                            if (node.attributes.shopTreeVO != null) {
                                UnitTreeCatalog.showLastView()
                            }
                        }
                    }
                }
            },
            onBeforeEdit: function (nodeTarget) {
            },
            onAfterEdit: function (nodeTarget) {
            },
            onBeforeDrag: function (node) {
                if (!$("#cbChange").is(":checked")) {
                    return false
                }
                if (node.attributes != null && (node.attributes.shopTreeVO != null || node.attributes.staffGroupVO != null)) {
                    return false
                }
                return true
            },
            onBeforeDrop: function (target, source, point) {
                if (point != undefined) {
                    return false
                }
                var nodeTarget = $("#tree").tree("getNode", target);
                return UnitTreeCatalog.doDrop(source, nodeTarget)
            }
        })
    },
    checkStaffOnTree: function (staffId) {
        for (var i = 0; i < UnitTreeCatalog._listNodeTree.valArray.length; i++) {
            var temp = UnitTreeCatalog._listNodeTree.valArray[i];
            if (temp != null && temp.attributes != null && temp.attributes.staff != null && temp.attributes.staff.id == staffId) {
                return true
            }
        }
        return false
    },
    checkGSOnGroup: function (node) {
        for (var i = 0; i < node.children.length; i++) {
            var temp = node.children[i];
            if (temp != null && temp.attributes != null && temp.attributes.staffTreeVO != null && temp.attributes.staffTreeVO.staffType == "GS") {
                return true
            }
        }
        return false
    },
    parseStaff: function (staff) {
        var staffVO = new Object();
        staffVO.id = staff.id;
        staffVO.org = staff.organization;
        staffVO.staffCode = staff.staffCode;
        staffVO.staffName = staff.staffName;
        staffVO.staffType = staff.roleType;
        return staffVO
    },
    resize: function () {
        var hSidebar3 = $("#tree").height();
        var hSidebar1 = $(".Content3Section").height();
        if (hSidebar3 > 650) {
            $(".ReportTree2Section").css("height", "auto")
        } else {
            if (hSidebar3 < hSidebar1) {
                if (hSidebar1 < 700) {
                    $(".ReportTree2Section").height(hSidebar1 - 60)
                } else {
                    $(".ReportTree2Section").height(650)
                }
            } else {
                if (hSidebar3 < 300) {
                    $(".ReportTree2Section").height(300)
                } else {
                    $(".ReportTree2Section").css("height", "auto")
                }
            }
        }
        var hSidebar2 = $(".Sidebar1Section").height();
        if (hSidebar1 > hSidebar2) {
            $(".Content1Section").height(hSidebar1)
        } else {
            $(".Content1Section").height(hSidebar2)
        }
        return
    },
    showSearchScreen: function (view) {
        var params = new Object();
        Utils.getHtmlDataByAjax(params, "/catalog/unit-tree/show-search", function (data) {
            $("#unitTreeContent").html(data).show()
        }, null, "POST");
        return false
    },
    showShopEditScreen: function (shopId, typeView) {
        UnitTreeCatalog.expandToNode(shopId, UnitTreeCatalog.SHOP);
        var params = new Object();
        params.shopId = shopId;
        params.typeView = typeView;
        Utils.getHtmlDataByAjax(params, "/catalog/unit-tree/view-shop", function (data) {
            $("#unitTreeContent").html(data).show();
            UnitTreeCatalog.resize();
            UnitTreeCatalog._typeScreen = -3
        }, null, "POST");
        return false
    },
    searchStaff: function () {
        var staffCode = $("#staffCode").val().trim();
        var staffName = $("#staffName").val().trim();
        var shopId = $("#searchShopId").val().trim();
        var staffGroupId = $("#searchGroupId").val().trim();
        var status = $("#status").val();
        $("#searchStaffUnitGrid").datagrid("load", {
            staffCode: staffCode,
            staffName: staffName,
            shopId: shopId,
            staffGroupId: staffGroupId,
            status: status
        })
    },
    showStaffSearchScreen: function () {
        var params = new Object();
        Utils.getHtmlDataByAjax(params, "/catalog/unit-tree/manage-staff", function (data) {
            $("#unitTreeContent").html(data).show();
            UnitTreeCatalog.resize()
        }, null, "POST");
        return false
    },
    showStaffCreateScreen: function (staffType, orgId, orgName, staffGroupId) {
        var node = $("#tree").tree("getSelected");
        var orgType = null;
        var staffOwnerId = 0;
        if (node == null) {
            $("#errMsg").html("Vui lòng ch�?n đơn vị để thêm mới nhân viên").show();
            return false
        } else {
            if (node.attributes.staff == null) {
                if (node.id == "1") {
                    orgId = node.attributes.org.id;
                    orgName = node.attributes.org.orgName;
                    var nodeTmp = UnitTreeCatalog._listNodeTree.valArray[2];
                    staffOwnerId = nodeTmp.attributes.staff.id;
                    orgType = 0
                } else {
                    if (node.id == "g1") {
                        orgId = node.attributes.group.org.id;
                        orgName = node.attributes.group.org.orgName;
                        var nodeTmp = UnitTreeCatalog._listNodeTree.valArray[2];
                        staffOwnerId = nodeTmp.attributes.staff.id;
                        orgType = 0
                    } else {
                        if (node.attributes.org != null) {
                            orgId = node.attributes.org.id;
                            orgName = node.attributes.org.orgName;
                            if (node.attributes.org.type == "REGION") {
                                orgType = 1
                            } else {
                                if (node.attributes.org.type == "AREA") {
                                    orgType = 2
                                } else {
                                    if (node.attributes.org.type == "GROUP") {
                                        orgType = 3
                                    }
                                }
                            }
                        } else {
                            if (node.attributes.group != null) {
                                orgId = node.attributes.group.org.id;
                                orgName = node.attributes.group.org.orgName;
                                if (node.attributes.group.org != null) {
                                    if (node.attributes.group.org.type == "REGION") {
                                        orgType = 1
                                    } else {
                                        if (node.attributes.group.org.type == "AREA") {
                                            orgType = 2
                                        } else {
                                            if (node.attributes.group.org.type == "GROUP") {
                                                orgType = 3
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                var params = new Object();
                params.staffType = staffType;
                params.orgId = orgId;
                params.orgName = orgName;
                params.orgType = orgType;
                params.staffGroupId = staffGroupId;
                Utils.getHtmlDataByAjax(params, "/unit-tree/view-staff", function (data) {
                    $("#unitTreeContent").html(data).show();
                    $("#errMsg").html("").hide();
                    UnitTreeCatalog.resize();
                    UnitTreeCatalog._typeScreen = -3
                }, null, "POST")
            }
        }
        return false
    },
    showStaffEditScreen: function (staffId, typeView, staffType, staffGroupId) {
        UnitTreeCatalog.expandToNode(staffId, UnitTreeCatalog.STAFF);
        var params = new Object();
        params.staffGroupId = staffGroupId;
        params.staffId = staffId;
        params.staffType = staffType;
        params.typeView = typeView;
        params.shopId = $("#shopId").val().trim();
        Utils.getHtmlDataByAjax(params, "/catalog/unit-tree/view-staff", function (data) {
            $("#unitTreeContent").html(data).show();
            UnitTreeCatalog.resize();
            UnitTreeCatalog._typeScreen = -3
        }, null, "POST");
        return false
    },
    showStaffEditScreen1: function (staffId, typeView) {
        var rows = $("#searchStaffUnitTreeGrid").datagrid("getRows");
        var row = null;
        for (var i = 0; i < rows.length; i++) {
            if (rows[i].id == staffId) {
                row = rows[i]
            }
        }
        var shopId = (row.shop == null ? 0 : row.shop.id);
        var staffType = row.staffType.objectType;
        UnitTreeCatalog.showStaffEditScreen(staffId, typeView, staffType, shopId)
    },
    getParamSearchStaff: function () {
        var param = new Object();
        var node = $("#tree").tree("getSelected");
        if ($("#staffCodeSearch").val().trim() != "") {
            param.staffCode = $("#staffCodeSearch").val().trim()
        }
        if ($("#staffNameSearch").val().trim() != "") {
            param.staffName = $("#staffNameSearch").val().trim()
        }
        if ($("#statusSearch").val().trim() != "") {
            param.status = $("#statusSearch").val().trim()
        }
        if (node != null) {
            if (node.attributes.staffGroupVO != null) {
                param.staffGroupId = node.attributes.staffGroupVO.staffGroupId;
                $("#searchGroupId").val(node.attributes.staffGroupVO.staffGroupId);
                $("#searchShopId").val(node.attributes.staffGroupVO.shopId)
            }
        }
        return param
    },
    search: function () {
        $("#errMsg").html("").hide();
        var param = UnitTreeCatalog.getParamSearchStaff();
        $("#searchStaffUnitTreeGrid").datagrid("load", param);
        return false
    },
    createStaff: function (staffType) {
        var node = $("#tree").tree("getSelected");
        UnitTreeCatalog.showStaffEditScreen(-1, 2, staffType, node.attributes.staffGroupVO.staffGroupId)
    },
    dialogCreateStaffGroup: function (staffGroup) {
        $("#popupStaffGroup").dialog({
            closed: false,
            cache: false,
            modal: true,
            width: 600,
            height: 500,
            onOpen: function () {
                $("#staffGroupCode").val("");
                $("#staffGroupName").val("");
                $("#staffGroupCode").focus();
                $("#popupStaffGroup #successMsg").html("");
                var lat = null;
                var lng = null;
                if (staffGroup != null && staffGroup != undefined) {
                    $("#btnSaveStaffGroup").html("C�p nh�t");
                    $("#staffGroupCode").val(staffGroup.staffGroupCode);
                    $("#staffGroupName").val(staffGroup.staffGroupName);
                    lat = staffGroup.lat;
                    lng = staffGroup.lng;
                    UnitTreeCatalog._lat = lat;
                    UnitTreeCatalog._lng = lng;
                    UnitTreeCatalog._isSaveOrUpdateStaffGroup = 1;
                    $("#staffGroupCode").attr("disabled", "disabled")
                } else {
                    $("#staffGroupCode").removeAttr("disabled");
                    $("#btnSaveStaffGroup").html("Thêm mới");
                    UnitTreeCatalog._isSaveOrUpdateStaffGroup = 0
                }
                $("#staffGroupName").parent().unbind("keyup");
                $("#staffGroupName").parent().bind("keyup", function (event) {
                    if (event.keyCode == keyCodes.ENTER) {
                        $("#btnSaveStaffGroup").click()
                    }
                });
                setTimeout(function () {
                    ViettelMap.loadMapResource(function () {
                        ViettelMap.loadBigMap("bigMap", lat, lng, null, function (lat, lng) {
                            ViettelMap.clearOverlays();
                            ViettelMap.addMarker(lat, lng);
                            UnitTreeCatalog._lat = lat;
                            UnitTreeCatalog._lng = lng
                        })
                    })
                }, 500)
            },
            onClose: function () {
                ViettelMap.clearOverlays();
                $("#bigMap").html("")
            }
        })
    },
    updateOrCreateStaff: function () {
        var msg = "";
        $("#errMsg").html("").hide();
        $("#errMsgStaff").html("").hide();
        var params = ValidateUtils.validate("#errMsgStaff", "#staffUnitDetailContent");
        if (params.error) {
            return
        }
        var dataModel = new Object();
        if ($("#staffGroupId").val() != null) {
            dataModel.staffGroupId = $("#staffGroupId").val().trim()
        } else {
            dataModel.staffGroupId = ""
        }
        var lstAttributesId = [];
        var lstAttributeValues = [];
        var i = 0;
        $(".attributeCls").each(function () {
            var objectId = "#" + $(this).attr("id");
            var idx = objectId.split("_")[1];
            lstAttributesId[i] = $("#attH_" + idx).val().trim();
            lstAttributeValues[i] = $(objectId).val();
            if (lstAttributeValues[i] == null || lstAttributeValues[i] == "-1") {
                lstAttributeValues[i] = ""
            }
            i++
        });
        var typeView = $("#typeView").val();
        dataModel.shopId = $("#shopId").val().trim();
        dataModel.staffCode = $("#staffCode").val().trim();
        dataModel.staffName = $("#staffName").val().trim();
        dataModel.gender = $("#gender").val();
        dataModel.staffPhone = $("#staffPhone").val().trim();
        dataModel.address = $("#address").val().trim();
        dataModel.staffType = $("#staffType").val().trim();
        dataModel.status = $("#status").val().trim();
        dataModel.lstAttributeValues = lstAttributeValues;
        dataModel.lstAttributesId = lstAttributesId;
        dataModel.typeView = typeView;
        var url = "/catalog/unit-tree/save-staff";
        Utils.addOrSaveData(dataModel, url, null, "errMsgStaff", function (data) {
            Utils.updateTokenForJSON(data);
            var newStaffId = data.newStaffId;
            UnitTreeCatalog.loadUnitTree(null, null, newStaffId, newStaffId);
            setTimeout(function () {
                $("#btnCancel").trigger("click")
            }, 1000)
        }, null, null, null, null, function (data) {
            var a = 0
        })
    },
    expandToNode: function (id, type) {
        if (type != null) {
            var root = $("#tree").tree("getRoot");
            var childNodes = $("#tree").tree("getChildren", root.target);
            for (var i = 0; i < childNodes.length; i++) {
                var childNode = childNodes[i];
                if (childNode.id == id) {
                    if (type == UnitTreeCatalog.SHOP) {
                        if (childNode.attributes.shopTreeVO != null) {
                            $("#tree").tree("expandTo", childNode.target);
                            $("#tree").tree("select", childNode.target)
                        }
                    }
                    if (type == UnitTreeCatalog.GROUP) {
                        if (childNode.attributes.staffGroupVO != null) {
                            $("#tree").tree("expandTo", childNode.target);
                            $("#tree").tree("select", childNode.target)
                        }
                    }
                    if (type == UnitTreeCatalog.STAFF) {
                        if (childNode.attributes.staffTreeVO != null) {
                            $("#tree").tree("expandTo", childNode.target);
                            $("#tree").tree("select", childNode.target)
                        }
                    }
                }
            }
        }
    },
    showLastView: function () {
        var lastView = $.data(document.body, "lastView");
        UnitTreeCatalog.showSearchScreen(lastView)
    },
    createStaffGroup: function () {
        var msg = "";
        $("#errGroupMsg").html("").hide();
        var staffGroupName = $("#staffGroupName").val().trim();
        var staffGroupCode = $("#staffGroupCode").val().trim();
        var params = ValidateUtils.validate("#errGroupMsg", "#popupStaffGroup");
        if (params.error) {
            return
        }
        var nodeSelect = $("#tree").tree("getSelected");
        if (nodeSelect == null) {
            return
        }
        var dataModel = new Object();
        dataModel.staffGroupCode = staffGroupCode;
        dataModel.staffGroupName = staffGroupName;
        dataModel.staffGroupName = staffGroupName;
        dataModel.isSaveOrUpdateStaffGroup = UnitTreeCatalog._isSaveOrUpdateStaffGroup;
        if (UnitTreeCatalog._lat != null && UnitTreeCatalog._lng != null) {
            dataModel.lat = UnitTreeCatalog._lat;
            dataModel.lng = UnitTreeCatalog._lng
        }
        Utils.addOrSaveData(dataModel, "/catalog/unit-tree/save-staff-group", UnitTreeCatalog._xhrSave, "errGroupMsg", function (data) {
            var tm = setTimeout(function () {
                $("#popupStaffGroup").dialog("close");
                $("#tree").tree("reload");
                UnitTreeCatalog._lat = null;
                UnitTreeCatalog._lng = null;
                UnitTreeCatalog._isSaveOrUpdateStaffGroup = null;
                clearTimeout(tm)
            }, 1500)
        }, null, "#popupStaffGroup")
    },
    dialogSearchStaff: function (staffType) {
        var params = new Object();
        params.staffCode = $("#seachStyle2Code").val().trim();
        params.staffName = $("#seachStyle2Name").val().trim();
        params.shopId = $("#shopId").val().trim();
        params.staffType = staffType;
        CommonSearchUnitTree.searchNVBHUnitTreeDialog(function (data) {
            if (data != null && data.length > 0) {
                var lstStaff = "";
                for (i = 0; i < data.length; i++) {
                    lstStaff = lstStaff + data[i].id + ","
                }
                lstStaff = lstStaff.substr(0, lstStaff.length - 1);
                var node = $("#tree").tree("getSelected");
                if (node != null && node.attributes != null & node.attributes.staffGroupVO != null) {
                    var dataModel = new Object();
                    dataModel.staffGroupId = node.attributes.staffGroupVO.staffGroupId;
                    dataModel.lstStaff = lstStaff;
                    Utils.addOrSaveData(dataModel, "/catalog/unit-tree/add-staff-for-group", UnitTreeCatalog._xhrSave, "errGroupMsg", function (data) {
                        $("#tree").tree("reload")
                    })
                }
            }
        }, params, "/catalog/unit-tree/search-all-staff-group")
    },
    exportExcel: function () {
        $("#errExcelMsg").html("").hide();
        $("#errMsg").html("").hide();
        $.messager.confirm("Xác nh�n", "Bạn có muốn export nhân viên ra excel?", function (r) {
            if (r) {
                var params = UnitTreeCatalog.getParamSearchStaff();
                var url = "/catalog/unit-tree/export-excel";
                ReportsUtils.exportExcel(params, url, "errExcelMsg", true)
            }
        });
        return false
    },
    importExcel: function () {
        $("#importFrm").attr("action", "/catalog/unit-tree/import-excel");
        ReportsUtils.uploadExcel(function () {
            $("#searchCustomerGrid").datagrid("reload")
        })
    },
    removeGroup: function () {
        var node = $("#tree").tree("getSelected");
        if (node != null && node.attributes != null & node.attributes.staffGroupVO != null) {
            var dataModel = new Object();
            dataModel.staffGroupId = node.attributes.staffGroupVO.staffGroupId;
            Utils.addOrSaveData(dataModel, "/catalog/unit-tree/remove-group", UnitTreeCatalog._xhrSave, "errGroupMsg", function (data) {
                $("#tree").tree("reload")
            });
            return false
        }
    },
    removeStaff: function () {
        var node = $("#tree").tree("getSelected");
        if (node != null && node.attributes != null & node.attributes.staffTreeVO != null) {
            var dataModel = new Object();
            dataModel.staffId = node.attributes.staffTreeVO.staffId;
            Utils.addOrSaveData(dataModel, "/catalog/unit-tree/remove-staff", UnitTreeCatalog._xhrSave, "errGroupMsg", function (data) {
                $("#tree").tree("reload")
            });
            return false
        }
    },
};
var ProductRivalCatalog = {
    _xhrSave: null, _xhrDel: null, getGridUrl: function (productCode, type) {
        return WEB_CONTEXT_PATH +"/catalog/product-rival/search?productCode=" + encodeChar(productCode) + "&type=" + type
    }, search: function () {
        $("#errMsg").html("").hide();
        var productCode = $("#productCode").val().trim();
        var type = $("#type").val();
        var url = ProductRivalCatalog.getGridUrl(productCode, type);
        $("#grid").datagrid({url: url, pageNumber: 1});
        return false
    }, editRow: function (target) {
        var indexRow = ProductRivalCatalog.getRowIndex(target);
        $("#grid").datagrid("beginEdit", indexRow)
    }, updateActions: function (index) {
        $("#grid").datagrid("updateRow", {index: index, row: {}})
    }, getRowIndex: function (target) {
        var tr = $(target).closest("tr.datagrid-row");
        return parseInt(tr.attr("datagrid-row-index"))
    }, cancelRow: function (target) {
        var indexRow = ProductRivalCatalog.getRowIndex(target);
        $("#grid").datagrid("cancelEdit", indexRow)
    }, deleteRow: function (productId) {
        $("#errMsg").html("").hide();
        var dataModel = new Object();
        dataModel.productId = productId;
        Utils.deleteSelectRowOnGrid(dataModel, "sản phẩm đối thủ", "/catalog/product-rival/remove", ProductRivalCatalog._xhrDel, null, null);
        return false
    }, createRow: function () {
        var msg = "";
        $("#errMsgDlg").html("").hide();
        var name = $("#productCodeDlg").val();
        var note = $("#noteDlg").val();
        msg = Utils.getMessageOfRequireCheck("productCodeDlg", "Tên sản phẩm");
        if (name.length > 250) {
            msg = " Tên sản phẩm không được lớn hơn 250 k� tự "
        }
        if (note.length > 100) {
            msg = " Ghi chú không được lớn hơn 100 k� tự "
        }
        if (msg.length == 0) {
            if (!/^[^<|>|?|\\|\'|\"|&|~#|$|%|@|*|||^|`]+$/.test(name)) {
                msg = format(msgErr_invalid_format_name, "Tên sản phẩm")
            }
        }
        if (msg.length > 0) {
            $("#errMsgDlg").html(msg).show();
            return false
        }
        var dataModel = new Object();
        dataModel.productId = $("#productId").val();
        dataModel.productCode = $("#productCodeDlg").val();
        dataModel.note = $("#noteDlg").val().trim();
        dataModel.type = $("#type").val();
        Utils.addOrSaveData(dataModel, "/catalog/product-rival/save", ProductRivalCatalog._xhrSave, "errMsgDlg", function (data) {
            ProductRivalCatalog.search();
            $("#productDialog").dialog("close")
        });
        return false
    }, updateRow: function (target) {
        var indexRow = ProductRivalCatalog.getRowIndex(target);
        ProductRivalCatalog.indexedit = indexRow;
        var rows = $("#grid").datagrid("getRows");
        var row = rows[indexRow];
        var msg = "";
        $("#errMsg").html("").hide();
        var productName = $("td[field=apParamName] .datagrid-editable-input").val();
        if (productName == "") {
            msg = "Bạn chưa nh�p giá trị cho trư�?ng Tên sản phẩm.";
            $("#errMsg").html(msg).show();
            $("td[field=apParamName] .datagrid-editable-input").focus();
            return false
        }
        if (productName.length > 250) {
            msg = " Tên sản phẩm không được lớn hơn 250 k� tự ";
            $("#errMsg").html(msg).show();
            $("td[field=apParamName] .datagrid-editable-input").focus();
            return false
        }
        var productNote = $("td[field=description] .datagrid-editable-input").val();
        if (productNote.length > 100) {
            msg = " Ghi chú không được lớn hơn 100 k� tự ";
            $("#errMsg").html(msg).show();
            $("td[field=description] .datagrid-editable-input").focus();
            return false
        }
        $("#productCodeHidden").val(productName);
        var msgProductName = Utils.getMessageOfSpecialCharactersValidate("productCodeHidden", "Tên sản phẩm", Utils._NAME);
        if (msgProductName.length > 0) {
            $("#errMsg").html(msgProductName).show();
            $("td[field=apParamName] .datagrid-editable-input").focus();
            return false
        }
        $("#noteHidden").val(productNote);
        var msgProductNote = Utils.getMessageOfSpecialCharactersValidate("noteHidden", "Ghi chú", Utils._NAME);
        if (msgProductNote.length > 0) {
            $("#errMsg").html(msgProductNote).show();
            $("td[field=description] .datagrid-editable-input").focus();
            return false
        }
        $("#productId").val($("#grid").datagrid("getRows")[this.indexedit].id);
        var dataModel = new Object();
        dataModel.productId = $("#productId").val();
        dataModel.productCode = $("#productCodeHidden").val();
        dataModel.note = $("#noteHidden").val().trim();
        dataModel.indexRow = indexRow;
        Utils.addOrSaveData(dataModel, "/catalog/product-rival/save", ProductRivalCatalog._xhrSave, null, function (data) {
            ProductRivalCatalog.search()
        });
        return false
    }, showDialogProduct: function () {
        $("#errMsgDlg").html("").hide();
        $("#productId").val(0);
        $("#productCodeDlg").val("");
        $("#noteDlg").val("");
        $("#divDialog").css("visibility", "visible");
        $("#productDialog").dialog({title: "Thông tin sản phẩm đối thủ"});
        $("#productDialog").dialog("open");
        $("#productCodeDlg").focus()
    }
};
var Images = {
    maxPopup: 20,
    lstCTTB: null,
    lstCTTB_temp: null,
    pagePopup: null,
    lstImages: null,
    indexCurrent: null,
    isEndImages: 0,
    callBack: null,
    customerId: null,
    filterSearchAlbum: null,
    filterAlbum: null,
    filterImageOfAlbum: null,
    displayProgrameId: null,
    displayProgrameCode: null,
    isGroup: null,
    shop_type: null,
    step: 0,
    checkScrollImageOfAlbum: null,
    scrollGetImageForPopup: null,
    checkDeleteImage: null,
    isFirstLoad: true,
    btnSearchClick: function () {
        var errMsg = "";
        var curFocus = "";
        $("#errMsg").html("").hide();
        $("#imageContent").html("").show();
        if (errMsg.length == 0) {
            errMsg = Utils.getMessageOfRequireCheck("fromDate", "Từ ngày");
            curFocus = "fromDate"
        }
        if (errMsg.length == 0) {
            errMsg = Utils.getMessageOfRequireCheck("toDate", "�?ến ngày");
            curFocus = "toDate"
        }
        var fromDate = $("#fromDate").val();
        if (errMsg.length == 0) {
            errMsg = Utils.getMessageOfInvalidFormatDateEx("fromDate", "Từ ngày");
            curFocus = "fromDate"
        }
        var toDate = $("#toDate").val();
        if (errMsg.length == 0) {
            errMsg = Utils.getMessageOfInvalidFormatDateEx("toDate", "�?ến ngày");
            curFocus = "toDate"
        }
        if (!Utils.compareDate(fromDate, toDate) && errMsg.length == 0) {
            errMsg = msgErr_fromdate_greater_todate;
            curFocus = "fromDate"
        }
        if (errMsg.length == 0 && toDate != "" && fromDate != "") {
            var arrFromDate = fromDate.split("/");
            var arrToDate = toDate.split("/");
            var countMonthF = (parseInt(arrFromDate[2]) * 12) + parseInt(arrFromDate[1]);
            var countMonthT = (parseInt(arrToDate[2]) * 12) + parseInt(arrToDate[1]);
            if (countMonthT - countMonthF > 3) {
                errMsg = "Vui lòng ch�?n khoảng th�?i gian chụp ảnh chỉ trong 4 tháng.";
                curFocus = "fromDate"
            }
        }
        if (errMsg.length == 0) {
            errMsg = Utils.getMessageOfSpecialCharactersValidate("customerCode", "Mã KH", Utils._CODE);
            curFocus = "customerCode"
        }
        if (errMsg.length == 0) {
            errMsg = Utils.getMessageOfSpecialCharactersValidate("customerAddress", "Tên hoặc địa chỉ", Utils._NAME);
            curFocus = "customerAddress"
        }
        if (errMsg.length > 0) {
            $("#errMsg").html(errMsg).show();
            $("#" + curFocus).focus();
            $("#imageContent").html("").show();
            return false
        }
        Images.setParamRequest();
        $(".TabSection").show();
        if ($("#currentTab").val() != undefined && $("#currentTab").val() != null && $("#currentTab").val().length == 1) {
            $("#tab" + $("#currentTab").val().trim()).click()
        } else {
            $("#tab1").click()
        }
    },
    search: function () {
        Images.displayProgrameId = null;
        Images.setParamRequest();
        var dataModel = Images.getParamRequest();
        var url = "/images/searchEx";
        if ($("#tab4").hasClass("Active")) {
            url = "/images/search"
        }
        Utils.getHtmlDataByAjax(dataModel, url, function (html) {
            $("#imageContent").html(html).show();
            if ($("#errMsgDate").val().trim().length > 0) {
                $("#errMsg").html($("#errMsgDate").val()).show();
                $("#fromDate").focus()
            }
            $("#title").html("Tìm kiếm hình ảnh").show()
        }, null, null)
    },
    setParamRequest: function () {
        Images.filterSearchAlbum = new Object();
        Images.filterAlbum = new Object();
        var multiShop = $("#shop").data("kendoMultiSelect");
        var lstShop = new Array();
        lstShop.push($("#shopIdLogin").val());
        Images.filterSearchAlbum.lstShop = lstShop;
        var multiStaff = $("#staff").data("kendoMultiSelect");
        var dataStaff = multiStaff.dataItems();
        if (dataStaff != null && dataStaff.length > 0) {
            var lstStaff = new Array();
            for (var i = 0; i < dataStaff.length; i++) {
                lstStaff.push(dataStaff[i].staffId)
            }
            Images.filterSearchAlbum.lstStaffSearch = lstStaff
        }
        Images.filterSearchAlbum.tuyen = $("#tuyen").val();
        Images.filterSearchAlbum.fromDate = $("#fromDate").val().trim();
        Images.filterSearchAlbum.toDate = $("#toDate").val().trim();
        Images.filterSearchAlbum.customerCode = $("#customerCode").val().trim();
        Images.filterSearchAlbum.customerNameOrAddress = $("#customerAddress").val().trim();
        Images.lstCTTB = new Array();
        $("#ddcl-cttb-ddw input[type=checkbox]").each(function () {
            if ($(this).is(":checked")) {
                var valueTmp = Number($(this).val());
                Images.lstCTTB.push(valueTmp)
            }
        });
        if (Images.lstCTTB == null || Images.lstCTTB.length == 0) {
            Images.lstCTTB = new Array();
            Images.lstCTTB.push(-1)
        }
        Images.filterSearchAlbum.lstCTTB = Images.lstCTTB
    },
    getParamRequest: function () {
        var params = new Object();
        if (Images.filterSearchAlbum != null) {
            if (Images.filterSearchAlbum.lstShop != undefined && Images.filterSearchAlbum.lstShop != null) {
                params.lstShop = Images.filterSearchAlbum.lstShop
            }
            if (Images.filterSearchAlbum.lstStaffSearch != undefined && Images.filterSearchAlbum.lstStaffSearch != null) {
                params.lstStaffSearch = Images.filterSearchAlbum.lstStaffSearch
            }
            if (Images.filterSearchAlbum.tuyen != undefined && Images.filterSearchAlbum.tuyen != null) {
                params.tuyen = Images.filterSearchAlbum.tuyen
            }
            if (Images.filterSearchAlbum.fromDate != undefined && Images.filterSearchAlbum.fromDate != null) {
                params.fromDate = Images.filterSearchAlbum.fromDate
            }
            if (Images.filterSearchAlbum.toDate != undefined && Images.filterSearchAlbum.toDate != null) {
                params.toDate = Images.filterSearchAlbum.toDate
            }
            if (Images.filterSearchAlbum.customerCode != undefined && Images.filterSearchAlbum.customerCode != null) {
                params.customerCode = Images.filterSearchAlbum.customerCode
            }
            if (Images.filterSearchAlbum.customerNameOrAddress != undefined && Images.filterSearchAlbum.customerNameOrAddress != null) {
                params.customerNameOrAddress = Images.filterSearchAlbum.customerNameOrAddress
            }
        }
        if (Images.customerId != undefined && Images.customerId != null) {
            params.customerId = Images.customerId
        }
        if ($("#tab1").hasClass("Active")) {
            params.objectType = 2
        } else {
            if ($("#tab2").hasClass("Active")) {
                params.objectType = 0
            } else {
                if ($("#tab3").hasClass("Active")) {
                    params.objectType = 1
                } else {
                    params.objectType = 4;
                    if (Images.filterSearchAlbum != null) {
                        if (Images.filterSearchAlbum.level != undefined && Images.filterSearchAlbum.level != null && Images.filterSearchAlbum.level != "") {
                            params.level = Images.filterSearchAlbum.level
                        }
                        if (Images.filterSearchAlbum.monthSeq != undefined && Images.filterSearchAlbum.monthSeq != null && Images.filterSearchAlbum.monthSeq.length > 0) {
                            params.monthSeq = Images.filterSearchAlbum.monthSeq
                        }
                        if (Images.filterSearchAlbum.lastSeq != undefined && Images.filterSearchAlbum.lastSeq != null) {
                            params.lastSeq = Images.filterSearchAlbum.lastSeq
                        }
                        if (Images.displayProgrameId != undefined && Images.displayProgrameId != null) {
                            params.displayProgrameId = Images.displayProgrameId
                        }
                        if (Images.filterSearchAlbum.lstCTTB != undefined && Images.filterSearchAlbum.lstCTTB != null) {
                            params.lstCTTB = Images.filterSearchAlbum.lstCTTB
                        }
                    }
                }
            }
        }
        return params
    },
    cbLastSeqChange: function () {
    },
    showAlbum: function (displayProgrameId) {
        $("#errMsg").html("").hide();
        var params = Images.getParamRequest();
        params.max = Images.maxPopup;
        params.displayProgrameId = displayProgrameId;
        Utils.getHtmlDataByAjax(params, "/images/showAlbum", function (data) {
            $("#title").html("Hình ảnh theo chương trình").show();
            Images.filterAlbum = new Object();
            Images.filterAlbum.page = 0;
            Images.filterAlbum.isEndAlbum = false;
            Images.filterImageOfAlbum = new Object();
            Images.filterImageOfAlbum.page = 0;
            Images.filterImageOfAlbum.isEndImgOfAlbum = false;
            Images.isGroup = false;
            Images.displayProgrameId = displayProgrameId;
            $("#imageContent").html(data).show();
            Images.displayProgrameCode = $("#displayProgrameCodeHid").val();
            Images.showAlbumSelect(false)
        }, null, "POST");
        return false
    },
    exportAlbum: function (displayProgrameId) {
        $("#errMsg").html("").hide();
        var params = Images.getParamRequest();
        var typeGroup = $("#typeGroup").val();
        var id = $("#id").val();
        if (typeGroup != undefined && typeGroup != null && typeGroup != "" && id != undefined && id != null && id != "") {
            params.id = id;
            params.typeGroup = typeGroup
        }
        var msg = "Bạn muốn tải album của chương trình " + Images.displayProgrameCode;
        $.messager.confirm("Xác nh�n", msg, function (r) {
            if (r) {
                $("#errMsg").html("").hide();
                $("#divOverlay").show();
                params.token = Utils.getToken();
                var kData = $.param(params, true);
                $.ajax({
                    type: "GET",
                    url: "/images/exportAlbum",
                    data: (kData),
                    dataType: "json",
                    success: function (data) {
                        $("#divOverlay").hide();
                        if (data.error && data.errMsg != undefined) {
                            $("#errMsg").html("Tải album không thành công. Lỗi: " + escapeSpecialChar(data.errMsg)).show()
                        } else {
                            if (data.hasData) {
                                window.location.href = data.view
                            } else {
                                $("#errMsg").html("Không có dữ liệu để tải").show()
                            }
                        }
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        $.ajax({
                            type: "POST",
                            url: "/check-session",
                            dataType: "json",
                            success: function (data, textStatus, jqXHR) {
                                var linkReload = window.location.href;
                                if (linkReload.indexOf("?") > 0) {
                                    if (linkReload.indexOf("newToken") < 0) {
                                        window.location.href = window.location.href + "&newToken=1"
                                    } else {
                                        window.location.reload(true)
                                    }
                                } else {
                                    window.location.href = window.location.href + "?newToken=1"
                                }
                            },
                            error: function (XMLHttpRequest, textStatus, errorThrown) {
                                window.location.href =WEB_CONTEXT_PATH +  "/home"
                            }
                        })
                    }
                })
            }
        });
        return false
    },
    resize: function () {
        heightContent = window.innerHeight - $("#header").height() - $(".BreadcrumbSection").height() - $("#footer").height();
        if ($(".ContentSection").height() > heightContent) {
            heightContent = $(".ContentSection").height()
        }
        $(".SidebarInSection").css({height: heightContent + "px"});
        if ($(".PhotoGroupSection").length) {
            $(".PhotoGroupSection").css({height: heightContent + "px"})
        }
    },
    hideAllTab: function () {
        $("#tab1").removeClass("Active");
        $("#tab2").removeClass("Active");
        $("#tab3").removeClass("Active");
        $("#tab4").removeClass("Active")
    },
    showTab1: function () {
        Images.hideAllTab();
        $("#tab1").addClass("Active");
        $("#currentTab").val(1);
        $("#cttb").dropdownchecklist("disable");
        Images.showAlbumDetail()
    },
    showTab2: function () {
        Images.hideAllTab();
        $("#tab2").addClass("Active");
        $("#currentTab").val(2);
        $("#cttb").dropdownchecklist("disable");
        Images.showAlbumDetail()
    },
    showTab3: function () {
        Images.hideAllTab();
        $("#tab3").addClass("Active");
        $("#currentTab").val(3);
        $("#cttb").dropdownchecklist("disable");
        Images.showAlbumDetail()
    },
    showTab4: function () {
        Images.hideAllTab();
        $("#tab4").addClass("Active");
        $("#currentTab").val(4);
        $("#cttb").dropdownchecklist("enable");
        Images.search()
    },
    showAlbumDetail: function (displayProgrameId) {
        $("#errMsg").html("").hide();
        Images.setParamRequest();
        if (displayProgrameId != undefined && displayProgrameId != null) {
            Images.displayProgrameId = displayProgrameId
        }
        Images.filterImageOfAlbum = new Object();
        Images.filterImageOfAlbum.page = 0;
        Images.filterImageOfAlbum.isEndImgOfAlbum = false;
        var params = Images.getParamRequest();
        params.page = 0;
        params.max = Images.maxPopup;
        var url = "/images/searchEx";
        Utils.getHtmlDataByAjax(params, url, function (data) {
            Images.isGroup = false;
            $("#imageContent").html(data).show();
            if ($("#tab1").hasClass("Active")) {
                $("#titleAlbum").append("Danh sách hình ảnh thuộc điểm bán")
            } else {
                if ($("#tab2").hasClass("Active")) {
                    $("#titleAlbum").append("Danh sách hình ảnh thuộc đóng c�a")
                } else {
                    if ($("#tab3").hasClass("Active")) {
                        $("#titleAlbum").append("Danh sách hình ảnh thuộc trưng bày tổng thể")
                    } else {
                        $("#titleAlbum").html("Danh sách hình ảnh trưng bày theo chương trình " + $("#titleAlbum").html())
                    }
                }
            }
            Images.displayProgrameCode = $("#displayProgrameCodeHid").val();
            Images.resize()
        }, null, "POST");
        return false
    },
    addListAlbumSelect: function () {
        var params = Images.getParamRequest();
        Images.filterAlbum.page = Images.filterAlbum.page + 1;
        params.typeGroup = $("#typeGroup").val();
        params.page = Images.filterAlbum.page;
        params.max = Images.maxPopup;
        Utils.getJSONDataByAjaxNotOverlay(params, "/images/addListAlbumSelect", function (data) {
            Images.fillAlbum(data.lstAlbum, data.typeGroup);
            Images.lazyLoadImages(".ImageAlbum", "#content");
            Images.filterAlbum.checkScrollAlbum == 1
        }, null, "POST");
        return false
    },
    showAlbumSelect: function (typeGroup, id) {
        $("#errMsg").html("").hide();
        Images.filterImageOfAlbum = new Object();
        Images.filterImageOfAlbum.isEndImgOfAlbum = false;
        Images.filterImageOfAlbum.page = 0;
        var params = Images.getParamRequest();
        if (typeGroup != undefined && typeGroup != null) {
            params.typeGroup = typeGroup
        }
        if (id != undefined && id != null) {
            params.id = id
        }
        params.page = 0;
        params.max = Images.maxPopup;
        Images.filterAlbum = new Object();
        Images.filterAlbum.page = 0;
        Images.filterAlbum.isEndAlbum = false;
        Utils.getHtmlDataByAjax(params, "/images/showAlbumSelect", function (data) {
            $("#imageContent").html(data).show();
            $(".ImageOfAlbum").lazyload({event: "scrollstop"})
        }, null, "POST");
        return false
    },
    changeGroup: function (typeGroup, id) {
        $("#errMsg").html("").hide();
        var params = Images.getParamRequest();
        if (typeGroup != undefined && typeGroup != null) {
            params.typeGroup = typeGroup;
            $("#typeGroup").val(typeGroup)
        }
        if (id != undefined && id != null) {
            params.id = id;
            $("#id").val(id)
        }
        Images.filterImageOfAlbum = new Object();
        Images.filterImageOfAlbum.page = 0;
        Images.filterImageOfAlbum.isEndImgOfAlbum = false;
        params.page = 0;
        params.max = Images.maxPopup;
        $("#albumContentDetail").html("");
        $("#divOverlayAddImage").show();
        Utils.getJSONDataByAjaxNotOverlay(params, "/images/addAlbumSelect", function (data) {
            if (data.title != undefined && data.title != "") {
                $("#titleAlbum").html("Danh sách hình ảnh thuộc " + data.title)
            } else {
                $("#titleAlbum").html("Danh sách hình ảnh")
            }
            Images.fillImagesOfAlbum(data.lstImage, Images.isGroup, true);
            $(".ImageOfAlbum").lazyload({event: "scrollstop"});
            Images.checkScrollImageOfAlbum = 1;
            $("#divOverlayAddImage").hide()
        }, null, "POST");
        return false
    },
    addImageOfAlbumSelect: function (typeGroup, id) {
        $("#errMsg").html("").hide();
        var params = Images.getParamRequest();
        if (typeGroup != undefined && typeGroup != null) {
            params.typeGroup = typeGroup
        }
        if (id != undefined && id != null) {
            params.id = id
        }
        Images.filterImageOfAlbum.page++;
        params.page = Images.filterImageOfAlbum.page;
        params.max = Images.maxPopup;
        $("#divOverlayAddImage").show();
        Utils.getJSONDataByAjaxNotOverlay(params, "/images/addAlbumSelect", function (data) {
            Images.fillImagesOfAlbum(data.lstImage, Images.isGroup, true);
            $(".ImageOfAlbum").lazyload({event: "scrollstop"});
            Images.checkScrollImageOfAlbum = 1;
            $("#divOverlayAddImage").hide()
        }, null, "POST");
        return false
    },
    loadImageOfAlbumAfterDelete: function () {
        $("#errMsg").html("").hide();
        var params = Images.getParamRequest();
        params.isGroup = Images.isGroup;
        params.page = 0;
        if (Images.filterImageOfAlbum.page > 0) {
            params.max = Images.maxPopup * (Images.filterImageOfAlbum.page + 1)
        } else {
            params.max = Images.maxPopup
        }
        Utils.getJSONDataByAjaxNotOverlay(params, "/images/showAlbumSelect", function (data) {
            Images.fillImagesOfAlbum(data.lstImage, Images.isGroup, false);
            Images.filterImageOfAlbum.page--;
            $(".ImageOfAlbum").lazyload({event: "scrollstop"})
        }, null, "POST");
        return false
    },
    fillAlbum: function (lstAlbum, typeGroup) {
        var listImage = "";
        if (lstAlbum != undefined && lstAlbum != null && lstAlbum.length > 0) {
            for (var i = 0; i < lstAlbum.length; i++) {
                var currentMil = new Date().getTime();
                listImage += "<li>";
                listImage += '<a href="javascript:void(0)" class="PhotoThumbGroup" onclick="Images.changeGroup(' + typeGroup + "," + Utils.XSSEncode(lstAlbum[i].customerId) + ')">';
                listImage += '        <span class="BoxFrame">';
                listImage += '        	<span class="BoxMiddle">';
                listImage += '        	<img id="imagesOfAlbum_' + lstAlbum[i].id + '" width="142" height="102" class="ImageAlbum ImageFrame2"  src="' + WEB_CONTEXT_PATH + '/resources/images/grey.jpg" data-original="' + imgDisplayPath + lstAlbum[i].urlThum + "?v=" + currentMil + '">';
                listImage += "       	</span>";
                listImage += "        </span>";
                listImage += "</a>";
                listImage += '<p class="Text3Style"><a href="javascript:void(0)" onclick="Images.changeGroup(' + typeGroup + "," + Utils.XSSEncode(lstAlbum[i].customerId) + ')">';
                listImage += Utils.XSSEncode(lstAlbum[i].customerCode) + " - " + Utils.XSSEncode(lstAlbum[i].customerName) + " (" + lstAlbum[i].countImg + ")</a></p>";
                listImage += "</li>"
            }
        } else {
            Images.filterAlbum.isEndAlbum = true
        }
        $("#lstAlbumContent").append(listImage);
        Images.resize()
    },
    fillImagesOfAlbum: function (lstImage, isGroup, isAddImage) {
        var listImage = "";
        if (lstImage != undefined && lstImage != null && lstImage.length > 0) {
            for (var i = 0; i < lstImage.length; i++) {
                listImage += "<li>";
                var currentMil = new Date().getTime();
                listImage += '<a href="javascript:void(0)" class="PhotoThumbGroup1" onclick="Images.showDialogFancy(' + lstImage[i].id + ')">';
                listImage += '<span class="BoxFrame"><span class="BoxMiddle">';
                listImage += '<img  class="ImageOfAlbum ImageFrame3" src="/dmslite_v2/resources/images/grey.jpg" data-original="' + (imgDisplayPath + lstImage[i].urlThum + "?v=" + currentMil) + '" width="201" height="144" />';
                listImage += "</span></span></a>";
                listImage += '<p class="Text1Style"><a onclick="Images.showDialogFancy(' + lstImage[i].id + ')" href="javascript:void(0)">' + Utils.XSSEncode(lstImage[i].shopCode) + " - " + Utils.XSSEncode(lstImage[i].customerCode) + "-" + Utils.XSSEncode(lstImage[i].customerName) + "</a></p>";
                listImage += '<p class="Text2Style">' + lstImage[i].createDateStr + "</p>";
                listImage += "</li>"
            }
        } else {
            Images.filterImageOfAlbum.isEndImgOfAlbum = true
        }
        if (isAddImage) {
            $("#albumContentDetail").append(listImage)
        } else {
            $("#albumContentDetail").html(listImage)
        }
        Images.resize()
    },
    onOffMap: function (i) {
        if (i == 0) {
            $(".OffFucnStyle").hide();
            $(".OffFucnStyle").css("display", "none");
            $(".OnFucnStyle").show();
            $(".OnFucnStyle").css("display", "block");
            $(".fancybox-inner #divMapSection").removeClass("SmallMapSection");
            $(".fancybox-inner #divMapSection").addClass("LargeMapSection");
            $(".fancybox-inner #bigMap").css("width", "488px");
            $(".fancybox-inner #bigMap").css("height", "409px")
        } else {
            $(".OnFucnStyle").hide();
            $(".OnFucnStyle").css("display", "none");
            $(".OffFucnStyle").show();
            $(".OffFucnStyle").css("display", "block");
            $(".fancybox-inner #divMapSection").removeClass("LargeMapSection");
            $(".fancybox-inner #divMapSection").addClass("SmallMapSection");
            $(".fancybox-inner #bigMap").css("width", "140px");
            $(".fancybox-inner #bigMap").css("height", "120px")
        }
        Images.openMapOnImage()
    },
    imageBigShow: function () {
        $(".fancybox-inner #loadingImages").hide();
        $(".fancybox-inner #bigImages").fadeIn(1000)
    },
    imageLoadingShow: function () {
        $(".fancybox-inner #bigImages").hide();
        $(".fancybox-inner #loadingImages").show()
    },
    lazyLoadImages: function (object, container) {
        $(object).lazyload({
            event: "scrollstop",
            container: $(container),
            effect: "fadeIn",
            failurelimit: 1,
            threshold: -20
        });
        $(object).each(function () {
            $(this).attr("src", $(this).attr("data-original"));
            $(this).removeAttr("data-original")
        })
    },
    getImagesForPopup: function (callBack, countPage) {
        var data = Images.getParamRequest();
        var typeGroup = $("#typeGroup").val();
        var id = $("#id").val();
        if (typeGroup != undefined && typeGroup != "" && id != undefined && id != "") {
            data.typeGroup = typeGroup;
            data.id = id
        }
        if (countPage != undefined && countPage != null && countPage != 0) {
            data.max = Images.maxPopup * (countPage + 1);
            data.page = 0;
            Images.pagePopup = countPage
        } else {
            data.max = Images.maxPopup;
            data.page = Images.pagePopup
        }
        if (data.page == 0) {
            scrollIntoViewPopup = 1
        }
        if (callBack != undefined && callBack != null) {
            Images.callBack = callBack
        }
        $(".loadingPopup").show();
        var kData = $.param(data, true);
        $.ajax({
            type: "POST",
            url: "/images/get-images-for-popup",
            data: (kData),
            dataType: "html",
            success: function (data) {
                Images.scrollGetImageForPopup = 1;
                try {
                    $(".loadingPopup").hide();
                    var myData = JSON.parse(data);
                    if (myData.error) {
                    } else {
                        var lstImage = myData.lstImage;
                        var listNew = new Map();
                        if (lstImage != undefined && lstImage != null && lstImage.length > 0) {
                            Images.pagePopup++;
                            for (var i = 0; i < lstImage.length; i++) {
                                var currentMil = new Date().getTime();
                                lstImage[i].urlEx = lstImage[i].urlImage;
                                lstImage[i].urlImage = imgDisplayPath + lstImage[i].urlImage + "?v=" + currentMil;
                                lstImage[i].urlThum = imgDisplayPath + lstImage[i].urlThum + "?v=" + currentMil;
                                if (lstImage[i].shopCode == undefined || lstImage[i].shopCode == null) {
                                    lstImage[i].shopCode = ""
                                }
                                if (lstImage[i].shopName == undefined || lstImage[i].shopName == null) {
                                    lstImage[i].shopName = ""
                                }
                                if (lstImage[i].staffCode == undefined || lstImage[i].staffCode == null) {
                                    lstImage[i].staffCode = ""
                                }
                                if (lstImage[i].staffName == undefined || lstImage[i].staffName == null) {
                                    lstImage[i].staffName = ""
                                }
                                if (Images.lstImages.get(lstImage[i].id) == null) {
                                    listNew.put(lstImage[i].id, lstImage[i])
                                }
                                Images.lstImages.put(lstImage[i].id, lstImage[i])
                            }
                        } else {
                            if (Images.pagePopup == 0) {
                                $.fancybox.close()
                            }
                            Images.isEndImages = 1;
                            if (Images.indexCurrent == null) {
                                Images.indexCurrent = Images.lstImages.keyArray[Images.lstImages.keyArray.length - 1]
                            }
                            if (Images.callBack != undefined && Images.callBack != null) {
                                Images.callBack.call()
                            }
                        }
                        Images.fillThumbnails(listNew)
                    }
                } catch (err) {
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                Images.scrollGetImageForPopup = 1
            }
        })
    },
    showDialogFancy: function (mediaItemId, customerId) {
        if ($(".OffFucnStyle").is(":visible")) {
            $(".OffFucnStyle").hide();
            $(".OffFucnStyle").css("display", "none")
        } else {
            if ($(".OnFucnStyle").is(":visible")) {
                $(".OnFucnStyle").hide();
                $(".OnFucnStyle").css("display", "none")
            }
        }
        var nameId = "popup-images";
        var title = "";
        if (Images.displayProgrameCode != undefined && Images.displayProgrameCode != null && Images.displayProgrameCode != "") {
            title = Images.displayProgrameCode;
            title += ' (<span id="titlePopup"></span>)'
        } else {
            title += '<span id="titlePopup"></span>'
        }
        title += '<img class="loadingPopup" src="' + WEB_CONTEXT_PATH + '/resources/images/loading.gif" width="16" height="16" alt="�?ang tải" class="LoadingStyle" />';
        if (customerId != undefined && customerId != null) {
            title += '<span id="maximizePopup" class="Maximize"><img onclick="Images.showDialogFancyFull(' + mediaItemId + ", " + customerId + ')" src="' + WEB_CONTEXT_PATH + '/resources/images/dialog/maximize-window.gif" width="19" height="19" alt="Phóng to" style="float: right; cursor: pointer; margin-top: -5px; padding-right: 33px;" /></span>'
        } else {
            title += '<span id="maximizePopup" class="Maximize"><img onclick="Images.showDialogFancyFull(' + mediaItemId + ')" src="' + WEB_CONTEXT_PATH + '/resources/images/dialog/maximize-window.gif" width="19" height="19" alt="Phóng to" style="float: right; cursor: pointer; margin-top: -5px; padding-right: 33px;" /></span>'
        }
        var html = $("#" + nameId).html();
        if (customerId != undefined && customerId != null) {
            Images.customerId = customerId
        }
        if (mediaItemId != undefined && mediaItemId != null) {
            Images.indexCurrent = mediaItemId
        }
        $("#" + nameId).html("");
        Images.checkDeleteImage = null;
        $.fancybox(html, {
            title: title,
            closeBtn: true,
            width: "1300px",
            height: "900px",
            helpers: {title: {type: "inside"}},
            afterShow: function () {
                $(".fancybox-wrap").css("z-index", "100003");
                $("#imagePopupDivOverLay").show();
                if (mediaItemId != undefined && mediaItemId != null) {
                    Images.indexCurrent = mediaItemId
                }
                if ($("#tab4").hasClass("Active")) {
                    $(".fancybox-inner #result").show();
                    $(".fancybox-inner #lblResult").show()
                } else {
                    $(".fancybox-inner #lblResult").hide();
                    $(".fancybox-inner #result").hide()
                }
                Images.pagePopup = 0;
                Images.isEndImages = 0;
                Images.lstImages = new Map();
                if (Images.filterImageOfAlbum.page != undefined && Images.filterImageOfAlbum.page != null && Images.filterImageOfAlbum.page > 0) {
                    Images.getImagesForPopup(null, Images.filterImageOfAlbum.page)
                } else {
                    Images.getImagesForPopup()
                }
                Images.openMapOnImage();
                Images.scrollGetImageForPopup = 1;
                $(".fancybox-inner #listImage").scroll(function () {
                    if (Images.scrollGetImageForPopup == 1 && Images.isEndImages == 0 && $(this).outerHeight() > ($(this).get(0).scrollHeight - $(this).scrollTop() - 2)) {
                        Images.scrollGetImageForPopup = 0;
                        Images.getImagesForPopup()
                    }
                })
            },
            afterClose: function () {
                $("#" + nameId).html(html);
                Images.indexCurrent = null;
                Images.callBack = null;
                Images.customerId = null;
                $("#imagePopupDivOverLay").hide()
            },
            beforeClose: function () {
                if (Images.checkDeleteImage != undefined && Images.checkDeleteImage != null && Images.checkDeleteImage == true) {
                    Images.loadImageOfAlbumAfterDelete();
                    Images.checkDeleteImage = null
                }
            }
        });
        return false
    },
    showDialogFancyFull: function (mediaItemId, customerId) {
        if ($(".OffFucnStyle").is(":visible")) {
            $(".OffFucnStyle").hide();
            $(".OffFucnStyle").css("display", "none")
        } else {
            if ($(".OnFucnStyle").is(":visible")) {
                $(".OnFucnStyle").hide();
                $(".OnFucnStyle").css("display", "none")
            }
        }
        var nameId = "popup-images-full";
        var title = "";
        if (Images.displayProgrameCode != undefined && Images.displayProgrameCode != null && Images.displayProgrameCode != "") {
            title = Images.displayProgrameCode;
            title += ' (<span id="titlePopup"></span>)'
        } else {
            title += '<span id="titlePopup"></span>'
        }
        title += '<img class="loadingPopup" src="' + WEB_CONTEXT_PATH + '/resources/images/loading.gif" width="16" height="16" alt="�?ang tải" class="LoadingStyle" />';
        if (customerId != undefined && customerId != null) {
            title += '<span id="minimizePopup" class="Minimize"><img src="' + WEB_CONTEXT_PATH + '/resources/images/dialog/minimize-window.gif" onclick="Images.showDialogFancy(' + mediaItemId + ", " + customerId + ')" width="19" height="19" alt="Phóng to" style="float: right; cursor: pointer; margin-top: -5px; padding-right: 33px;" /></span>'
        } else {
            title += '<span id="minimizePopup" class="Minimize"><img src="' + WEB_CONTEXT_PATH + '/resources/images/dialog/minimize-window.gif" onclick="Images.showDialogFancy(' + mediaItemId + ')" width="19" height="19" alt="Phóng to" style="float: right; cursor: pointer; margin-top: -5px; padding-right: 33px;" /></span>'
        }
        var html = $("#" + nameId).html();
        if (customerId != undefined && customerId != null) {
            Images.customerId = customerId
        }
        if (mediaItemId != undefined && mediaItemId != null) {
            Images.indexCurrent = mediaItemId
        }
        $("#" + nameId).html("");
        Images.checkDeleteImage = null;
        $.fancybox(html, {
            title: title,
            closeBtn: true,
            width: "1300px",
            height: "900px",
            helpers: {title: {type: "inside"}},
            afterShow: function () {
                $(".fancybox-wrap").css("z-index", "100003");
                $("#imagePopupDivOverLay").show();
                if (mediaItemId != undefined && mediaItemId != null) {
                    Images.indexCurrent = mediaItemId
                }
                if ($("#tab4").hasClass("Active")) {
                    $(".fancybox-inner #result").show();
                    $(".fancybox-inner #lblResult").show()
                } else {
                    $(".fancybox-inner #lblResult").hide();
                    $(".fancybox-inner #result").hide()
                }
                Images.isEndImages = 0;
                Images.lstImages = new Map();
                if (Images.filterImageOfAlbum.page != undefined && Images.filterImageOfAlbum.page != null && Images.filterImageOfAlbum.page > 0) {
                    Images.getImagesForPopup(null, Images.filterImageOfAlbum.page)
                } else {
                    Images.getImagesForPopup(null, Images.pagePopup)
                }
                Images.openMapOnImage();
                Images.scrollGetImageForPopup = 1;
                $(".fancybox-inner #listImage").scroll(function () {
                    if (Images.scrollGetImageForPopup == 1 && Images.isEndImages == 0 && $(this).outerHeight() > ($(this).get(0).scrollHeight - $(this).scrollTop() - 2)) {
                        Images.scrollGetImageForPopup = 0;
                        Images.getImagesForPopup()
                    }
                })
            },
            afterClose: function () {
                $("#imagePopupDivOverLay").hide();
                $("#" + nameId).html(html);
                Images.indexCurrent = null;
                Images.callBack = null;
                Images.customerId = null
            },
            beforeClose: function () {
                if (Images.checkDeleteImage != undefined && Images.checkDeleteImage != null && Images.checkDeleteImage == true) {
                    Images.loadImageOfAlbumAfterDelete();
                    Images.checkDeleteImage = null
                }
            }
        });
        return false
    },
    fillThumbnails: function (list) {
        var listImage = "";
        for (var i = 0; i < list.keyArray.length; i++) {
            var temp = list.get(list.keyArray[i]);
            if (temp != null) {
                var currentMil = new Date().getTime();
                listImage += '<li id="li' + temp.id + '">';
                listImage += '<div class="PhotoThumbnails BoxMiddle"><span class="BoxFrame" style="height: auto;"><span class="BoxMiddle"><img id="img' + temp.id + '" class="imageSelect ImageFrame2" src="/dmslite_v2/resources/images/grey.jpg"';
                listImage += ' data-original="' + (temp.urlThum + "?v=" + currentMil) + '" width="142" height="102" value="' + temp.id + '" /></span></span></div>';
                listImage += "<p>" + temp.dmyDate + " – " + temp.hhmmDate + "</p>";
                listImage += "</li>"
            }
        }
        $(".fancybox-inner #listImageUL").append(listImage);
        Images.lazyLoadImages(".fancybox-inner .imageSelect", ".fancybox-inner #listImage");
        $(".imageSelect").unbind("click");
        $(".imageSelect").click(Images.imageSelect);
        if (list.keyArray.length > 0) {
            if ((Images.indexCurrent == undefined || Images.indexCurrent == null || Images.lstImages.get(Images.indexCurrent) == null)) {
                Images.indexCurrent = list.keyArray[0]
            }
            setTimeout(function () {
                Images.showBigImagePopup(Images.indexCurrent)
            }, 1000)
        }
    },
    focusStyleThumbPopup: function (id) {
        $(".fancybox-inner .FocusStyle").removeClass("FocusStyle");
        $(".fancybox-inner #li" + id).addClass("FocusStyle")
    },
    imageSelect: function () {
        var id = $(this).attr("value");
        if ($("#minimizePopup").length != 0) {
            var func = $("#minimizePopup img").attr("onclick");
            if (func.indexOf("Full") != -1) {
                func = "Images.showDialogFancyFull(" + id + ")"
            } else {
                func = "Images.showDialogFancy(" + id + ")"
            }
            $("#minimizePopup img").attr("onclick", func)
        } else {
            var func = $("#maximizePopup img").attr("onclick");
            if (func.indexOf("Full") != -1) {
                func = "Images.showDialogFancyFull(" + id + ")"
            } else {
                func = "Images.showDialogFancy(" + id + ")"
            }
            $("#maximizePopup img").attr("onclick", func)
        }
        Images.showBigImagePopup(id)
    },
    showImageNextPre: function (type) {
        var flag = 0;
        for (var i = 0; i < Images.lstImages.keyArray.length; i++) {
            if (Images.lstImages.keyArray[i] == Images.indexCurrent) {
                if (type == 1 && i + 1 < Images.lstImages.keyArray.length) {
                    scrollIntoViewPopup = 1;
                    Images.showBigImagePopup(Images.lstImages.keyArray[i + 1]);
                    flag = 1
                } else {
                    if (type == 0 && i > 0) {
                        scrollIntoViewPopup = 1;
                        Images.showBigImagePopup(Images.lstImages.keyArray[i - 1])
                    }
                }
                break
            }
        }
        if (type == 1 && flag == 0 && Images.isEndImages == 0) {
            Images.indexCurrent = null;
            scrollIntoViewPopup = 1;
            Images.getImagesForPopup()
        }
    },
    isScrolledIntoView: function (elem) {
        var docViewTop = $(window).scrollTop();
        var docViewBottom = docViewTop + $(window).height();
        var elemTop = $(elem).offset().top;
        var elemBottom = elemTop + $(elem).height();
        return ((elemBottom <= docViewBottom) && (elemTop >= docViewTop))
    },
    getTypeImage: function (url) {
        var type = ".jpg";
        try {
            var s = url.split(".");
            if (s.length > 0) {
                type = "." + s[s.length - 1]
            }
        } catch (e) {
        }
        return type
    },
    showBigImagePopup: function (id) {
        try {
            var temp = Images.lstImages.get(id);
            if (temp != null) {
                var titleCodeLevelSeq = "";
                if ($("#tab4").hasClass("Active")) {
                    if (temp.displayProgrameCode != null) {
                        titleCodeLevelSeq += " - " + temp.displayProgrameCode
                    }
                    if (temp.levelCode != null) {
                        titleCodeLevelSeq += " - " + temp.levelCode
                    }
                    if (temp.monthSeq != null) {
                        titleCodeLevelSeq += " ( Lần " + temp.monthSeq + " )"
                    }
                }
                $("#titlePopup").html(temp.customerCode + " - " + temp.customerName + " - " + temp.customerAddress + titleCodeLevelSeq);
                if (scrollIntoViewPopup != undefined && scrollIntoViewPopup != null && scrollIntoViewPopup == 1) {
                    if (!Images.isScrolledIntoView(".fancybox-inner #li" + temp.id)) {
                        $(".fancybox-inner #li" + temp.id)[0].scrollIntoView(false)
                    }
                    scrollIntoViewPopup = null
                }
                Images.indexCurrent = temp.id;
                Images.focusStyleThumbPopup(temp.id);
                Images.imageLoadingShow();
                $(".fancybox-inner .DownloadPhotoLink").hide();
                $(".fancybox-inner #shopImage").html(Utils.XSSEncode(temp.shopCode) + " - " + Utils.XSSEncode(temp.shopName));
                $(".fancybox-inner #staffImage").html(Utils.XSSEncode(temp.staffCode) + " - " + Utils.XSSEncode(temp.staffName));
                $(".fancybox-inner #timeImage").html(temp.dmyDate + " - " + temp.hhmmDate);
                $(".fancybox-inner .DownloadPhotoLink").attr("href", temp.urlImage);
                $(".fancybox-inner .DownloadPhotoLink").attr("download", temp.urlEx.substring(temp.urlEx.lastIndexOf("/") + 1));
                if ($("#tab4").hasClass("Active")) {
                    $(".fancybox-inner #result").attr("value", temp.id);
                    if (temp.result != null && temp.result == 1) {
                        $(".fancybox-inner #result").attr("checked", "checked")
                    } else {
                        $(".fancybox-inner #result").removeAttr("checked")
                    }
                }
                Images.downloadFile(temp, false);
                $(".DeletePhotoLink").attr("value", temp.id);
                var currentMil = new Date().getTime();
                var urlTmp = temp.urlImage;
                if (urlTmp != "" && urlTmp.indexOf("?v=") == -1) {
                    urlTmp = urlTmp + "?v=" + currentMil
                }
                if (urlTmp != null && urlTmp != "" && urlTmp != undefined) {
                    if (document.images) {
                        var img = new Image();
                        img.src = urlTmp;
                        img.onload = function () {
                            $(".fancybox-inner #bigImages").attr("src", urlTmp);
                            Images.imageBigShow()
                        }
                    }
                }
            }
        } catch (err) {
            return
        }
    },
    updateResult: function () {
        var id = $(".fancybox-inner #result").attr("value");
        var result = 0;
        if (id != "") {
            if ($(".fancybox-inner #result").is(":checked")) {
                result = 1
            }
            var data = new Object();
            data.id = id;
            data.resultImg = result;
            Utils.addOrSaveData(data, "/images/updateResult", null, "errMsg123", function (data) {
                if (data.error) {
                    if (result == 1) {
                        $(".fancybox-inner #result").removeAttr("checked")
                    } else {
                        $(".fancybox-inner #result").attr("checked", "checked")
                    }
                } else {
                    var temp = Images.lstImages.get(id);
                    temp.result = result
                }
            }, "loading2", null, true)
        }
    },
    downloadFile: function (temp, ow) {
        var url = temp.urlEx;
        var customerInfo = Images.displayProgrameCode + " (" + temp.customerCode + " - " + temp.customerName + " - " + temp.customerAddress + ")";
        var shopInfo = temp.shopCode + " - " + temp.shopName;
        var staffInfo = temp.staffCode + " - " + temp.staffName;
        var dateInfo = temp.dmyDate + " - " + temp.hhmmDate;
        var data = new Object();
        data.id = temp.id;
        data.urlImage = url;
        data.customerInfo = customerInfo;
        data.shopInfo = shopInfo;
        data.staffInfo = staffInfo;
        data.dateInfo = dateInfo;
        data.overwrite = true;
        if (temp.monthSeq != undefined && temp.monthSeq != null) {
            data.monthSeqDownload = temp.monthSeq
        }
        if ($("#tab4").hasClass("Active") && Images.displayProgrameId != undefined && Images.displayProgrameId != null) {
            data.displayProgrameId = Images.displayProgrameId
        }
        $(".loadingPopup").show();
        $(".fancybox-inner .DownloadPhotoLink").hide();
        var kData = $.param(data, true);
        $.ajax({
            type: "GET", url: "/images/download/image", data: (kData), dataType: "json", success: function (data) {
                $(".loadingPopup").hide();
                $(".fancybox-inner .DownloadPhotoLink").show();
                if (!data.error && data.errMsg != null && data.errMsg.length > 0) {
                    $(".fancybox-inner .DownloadPhotoLink").attr("href", data.errMsg)
                } else {
                    $(".fancybox-inner .DownloadPhotoLink").attr("href", imgDisplayPath + url)
                }
            }, error: function (XMLHttpRequest, textStatus, errorThrown) {
                $(".loadingPopup").hide()
            }
        })
    },
    openMapOnImage: function () {
        VTMapUtil.loadMapResource(function () {
            var temp = Images.lstImages.get(Images.indexCurrent);
            if (temp != null) {
                if ($(".OnFucnStyle").is(":visible")) {
                    $(".OffFucnStyle").hide();
                    $(".OffFucnStyle").css("display", "none");
                    $(".OnFucnStyle").show();
                    $(".OnFucnStyle").css("display", "block");
                    $(".fancybox-inner #divMapSection").removeClass("SmallMapSection");
                    $(".fancybox-inner #divMapSection").addClass("LargeMapSection");
                    $(".fancybox-inner #bigMap").css("width", "488px");
                    $(".fancybox-inner #bigMap").css("height", "409px");
                    ViettelMap.loadMapForImages("bigMap", temp.lat, temp.lng, 13, 1, temp.custLat, temp.custLng)
                } else {
                    $(".OnFucnStyle").hide();
                    $(".OnFucnStyle").css("display", "none");
                    $(".OffFucnStyle").show();
                    $(".OffFucnStyle").css("display", "block");
                    $(".fancybox-inner #divMapSection").removeClass("LargeMapSection");
                    $(".fancybox-inner #divMapSection").addClass("SmallMapSection");
                    $(".fancybox-inner #bigMap").css("width", "140px");
                    $(".fancybox-inner #bigMap").css("height", "120px");
                    ViettelMap.loadMapForImages("bigMap", temp.lat, temp.lng, 13, 0, temp.custLat, temp.custLng)
                }
            }
        })
    },
    deleteImage: function (t) {
        var id = $(t).attr("value");
        var temp = Images.lstImages.get(id);
        if (temp != null) {
            var data = new Object();
            data.id = temp.id;
            $.messager.confirm("Xác nh�n", "Bạn có muốn xóa hình này", function (r) {
                if (r) {
                    Utils.addOrSaveData(data, "/images/delete-image", null, "errMsgPopup", function (result) {
                        if (!result.error) {
                            Images.checkDeleteImage = true;
                            Images.calPageNumberForPopup();
                            for (var i = 0; i < Images.lstImages.keyArray.length; i++) {
                                if (Images.lstImages.keyArray[i] == Images.indexCurrent) {
                                    if (i + 1 < Images.lstImages.keyArray.length) {
                                        Images.showImageNextPre(1)
                                    } else {
                                        if (i > 0) {
                                            Images.showImageNextPre(0)
                                        } else {
                                            Images.indexCurrent = null;
                                            Images.getImagesForPopup(function () {
                                                $.fancybox.close()
                                            })
                                        }
                                    }
                                    break
                                }
                            }
                            $("#li" + temp.id).remove();
                            Images.lstImages.remove(temp.id)
                        } else {
                            $(".fancybox-inner #errMsgPopup").html(result.errMsg).show();
                            setTimeout(function () {
                                $(".fancybox-inner #errMsgPopup").hide()
                            }, 5000)
                        }
                    }, "loading2", null, true, null, function (result) {
                        if (result.error) {
                            setTimeout(function () {
                                $(".fancybox-inner #errMsgPopup").hide()
                            }, 5000)
                        }
                    })
                }
            })
        }
    },
    rotateImage: function (t) {
        var id = Images.indexCurrent;
        var temp = Images.lstImages.get(id);
        if (temp != null) {
            var data = new Object();
            data.id = temp.id;
            kData = $.param(data, true);
            $("#divOverlay").show();
            $.ajax({
                type: "POST",
                url: "/images/rotate-image",
                data: (kData),
                dataType: "json",
                success: function (result) {
                    $("#divOverlay").hide();
                    if (!result.error) {
                        var currentMil = new Date().getTime();
                        var url = result.url + "?v=" + currentMil;
                        var urlThumbnail = result.thumbnailUrl + "?v=" + currentMil;
                        $("#img" + Images.indexCurrent).attr("data-original", urlThumbnail);
                        $("#img" + Images.indexCurrent).attr("src", urlThumbnail);
                        $("#imagesOfAlbum_" + Images.indexCurrent).attr("data-original", urlThumbnail);
                        $("#imagesOfAlbum_" + Images.indexCurrent).attr("src", urlThumbnail);
                        $("#imagesOfAlbulmDetail_" + Images.indexCurrent).attr("data-original", urlThumbnail);
                        $("#imagesOfAlbulmDetail_" + Images.indexCurrent).attr("src", urlThumbnail);
                        var image = url;
                        if (image != null && image != "" && image != undefined) {
                            if (document.images) {
                                var img = new Image();
                                img.src = image;
                                img.onload = function () {
                                    $(".fancybox-inner #bigImages").attr("src", image);
                                    Images.imageBigShow()
                                }
                            }
                        }
                        Images.downloadFile(temp, true)
                    } else {
                        $(".fancybox-inner #errMsgPopup").html("Lỗi hệ thống").show();
                        setTimeout(function () {
                            $(".fancybox-inner #errMsgPopup").hide()
                        }, 5000)
                    }
                }
            })
        }
    },
    calPageNumberForPopup: function () {
        if (Images.lstImages != undefined && Images.lstImages != null) {
            Images.pagePopup = parseInt((Images.lstImages.keyArray.length - 1) / Images.maxPopup)
        } else {
            Images.pagePopup = 0
        }
    },
    loadComboStaff: function (url) {
        $("#staff").kendoMultiSelect({
            dataSource: {transport: {read: {dataType: "json", url: url}}},
            filter: "contains",
            dataTextField: "staffCode",
            dataValueField: "staffId",
            itemTemplate: function (data, e, s, h, q) {
                return Utils.XSSEncode(data.staffCode) + " - " + Utils.XSSEncode(data.staffName)
            },
            tagTemplate: "#: data.staffCode #",
        });
        var staffKendo = $("#staff").data("kendoMultiSelect");
        staffKendo.wrapper.attr("staffId", "staff-wrapper")
    },
    loadComboCTTB: function (url) {
        $.getJSON(url, function (list) {
            $("#cttb").removeAttr("disabled");
            var html = "";
            if (list.length >= 2) {
                html += '<option value="-1" selected>--Tất cả--</option>';
                for (var i = 0; i < list.length; i++) {
                    Images.lstCTTB.push(Utils.XSSEncode(list[i].displayProgrameId));
                    Images.lstCTTB_temp.push(Utils.XSSEncode(list[i].displayProgrameId));
                    html += '<option value="' + Utils.XSSEncode(list[i].displayProgrameId) + '">' + Utils.XSSEncode(list[i].displayProgrameCode) + "</option>"
                }
                $("#cttb").html(html);
                setSelectBoxValue("cttb", -1);
                $("#ddcl-cttb").remove();
                $("#ddcl-cttb-ddw").remove();
                Images.lstCTTB_temp = Images.lstCTTB;
                $("#cttb").dropdownchecklist({
                    forceMultiple: true,
                    firstItemChecksAll: true,
                    maxDropHeight: 350,
                    onItemClick: function (checkbox, selector) {
                        var value = Number(checkbox.context.defaultValue);
                        if (checkbox.context.checked) {
                            if (value == -1) {
                                Images.lstCTTB = new Array();
                                $("#ddcl-cttb-ddw input[type=checkbox]").each(function () {
                                    var valueTmp = Number($(this).val());
                                    if (valueTmp != -1) {
                                        Images.lstCTTB.push(valueTmp)
                                    }
                                })
                            } else {
                                var index = Images.lstCTTB.indexOf(value);
                                if (index == -1) {
                                    Images.lstCTTB.push(value)
                                }
                            }
                        } else {
                            if (value == -1) {
                                Images.lstCTTB = new Array()
                            } else {
                                var index = Images.lstCTTB.indexOf(value);
                                if (index != -1) {
                                    Images.lstCTTB.splice(index, 1)
                                }
                            }
                        }
                    }
                })
            } else {
                if (list.length == 1) {
                    Images.lstCTTB.push(Utils.XSSEncode(list[0].displayProgrameId));
                    html += '<option value="' + Utils.XSSEncode(list[0].displayProgrameId) + '">' + Utils.XSSEncode(list[0].displayProgrameCode) + "</option>";
                    $("#cttb").html(html);
                    setSelectBoxValue("cttb", Utils.XSSEncode(list[0].displayProgrameId))
                } else {
                    html += '<option value="-2"></option>';
                    $("#cttb").html(html);
                    setSelectBoxValue("cttb", -2);
                    $("#cttb").attr("disabled", "disabled")
                }
            }
            if ($("#roleType").val() == 2) {
                Images.filterSearchAlbum = new Object();
                Images.filterSearchAlbum.shopId = $("#curShopId").val();
                Images.filterSearchAlbum.gsnppId = $("#staffId").val();
                Images.filterSearchAlbum.tuyen = -1;
                Images.filterSearchAlbum.fromDate = $("#fromDate").val().trim();
                Images.filterSearchAlbum.toDate = $("#toDate").val().trim();
                Images.filterSearchAlbum.lstCTTB = Images.lstCTTB
            }
        })
    },
    openOrderImage: function () {
        $("#orderImagePopup").dialog({
            title: "Tải hình ảnh",
            closed: false,
            cache: false,
            modal: true,
            width: 616,
            height: "auto",
            onOpen: function () {
            }
        })
    },
    exportAlbumEx: function () {
        var params = new Object();
        if ($("#fromDateOrder").val() != "") {
            params.fromDate = $("#fromDateOrder").val()
        }
        if ($("#toDateOrder").val() != "") {
            params.toDate = $("#toDateOrder").val()
        }
        if ($("#cttbOrder").val() != "") {
            params.cttbOrder = $("#cttbOrder").val()
        }
        var array = new Array();
        array.push("008_TT20201");
        array.push("04M_TT20201");
        array.push("0C6_TT20201");
        array.push("0DK_TT20201");
        array.push("036_TT20201");
        array.push("0A3_TT20201");
        array.push("00R_TT20201");
        array.push("0GU_TT20201");
        array.push("01D_TT20201");
        array.push("11G_TT20201");
        array.push("0NP_TT20201");
        array.push("038_TT20201");
        array.push("01J_TT20201");
        array.push("02R_TT20201");
        array.push("02P_DL20041");
        array.push("00T_DL20041");
        array.push("02O_DL20041");
        array.push("011_DL20041");
        array.push("13I_DL20041");
        array.push("147_HH20021");
        array.push("03L_HH20021");
        array.push("135_HH20021");
        array.push("001_HH20021");
        array.push("003_HH20021");
        array.push("0DB_HH20021");
        array.push("0K1_HH20021");
        array.push("110_HH20021");
        array.push("03R_NV20051");
        array.push("0I1_NV20051");
        array.push("030_NV20051");
        array.push("01I_NL20041");
        array.push("002_NL20041");
        array.push("01O_NL20041");
        array.push("00F_NL20041");
        array.push("07G_NL20041");
        array.push("057_NL20041");
        array.push("05T_NL20041");
        array.push("014_MH30041");
        array.push("07Y_MH30041");
        array.push("0B7_MH30041");
        array.push("03H_MH30041");
        array.push("059_MH30041");
        array.push("029_MH30041");
        array.push("024_MH30041");
        array.push("082_MH30041");
        array.push("061_MH30041");
        array.push("0XN_MH30041");
        array.push("084_MH30041");
        array.push("0MB_MH30041");
        array.push("00X_MH30041");
        array.push("00S_PT20091");
        array.push("0LG_PT20091");
        array.push("046_PT20091");
        array.push("048_PT20091");
        array.push("052_PT20091");
        array.push("0O1_PT20091");
        array.push("06Y_FM20011");
        array.push("06V_FM20011");
        array.push("0HS_FM20011");
        array.push("24N_FM20011");
        array.push("26A_FM20011");
        array.push("066_FM20011");
        array.push("054_FM20011");
        array.push("04S_FM20011");
        array.push("01H_FM20011");
        array.push("079_FM20011");
        array.push("01P_FM20011");
        array.push("03F_FM20011");
        array.push("03C_FM20011");
        array.push("876_FM20011");
        array.push("0IB_FM20011");
        array.push("00C_TH20031");
        array.push("0LW_TH20031");
        array.push("06P_TH20031");
        array.push("00I_TH20031");
        array.push("0OJ_TH20031");
        array.push("0NP_TH20031");
        array.push("0N6_TH20031");
        array.push("0NJ_PT20051");
        array.push("01J_PT20051");
        array.push("01G_PT20051");
        array.push("02H_PT20051");
        array.push("02W_PT20051");
        array.push("05U_PT20051");
        array.push("05V_PT20051");
        array.push("0BZ_PT20051");
        array.push("0TY_PT20051");
        array.push("036_PT20051");
        array.push("06O_PT20051");
        array.push("00Z_PT20051");
        array.push("00Y_PT20051");
        array.push("0G1_PT20051");
        array.push("0W5_PT20051");
        array.push("099_PT20051");
        array.push("02Y_PT20051");
        array.push("018_PT20051");
        array.push("017_DT30121");
        array.push("1D8_DT30121");
        array.push("09L_DT30121");
        array.push("09I_DT30121");
        array.push("10W_DT30121");
        array.push("05D_DT30121");
        array.push("10P_DT30121");
        array.push("100_DT30121");
        array.push("101_DT30121");
        array.push("0CG_DT30121");
        array.push("08U_DT30121");
        array.push("09X_DT30121");
        array.push("15I_DT30121");
        array.push("0R0_DT30121");
        array.push("15P_DT30121");
        array.push("19V_DT30121");
        array.push("0AU_DT30121");
        array.push("04Q_TK20011");
        array.push("0LJ_TK20011");
        array.push("0EI_TK20011");
        array.push("0QH_TK20011");
        array.push("0SC_TK20011");
        array.push("0RN_TK20011");
        array.push("02I_TK20011");
        array.push("0S6_TK20011");
        array.push("00K_TK20011");
        array.push("0H5_DH20051");
        array.push("0HJ_DH20051");
        array.push("0HX_DH20051");
        array.push("0PA_DH20051");
        array.push("13O_DH20051");
        array.push("0I3_DH20051");
        array.push("40F_DH20051");
        array.push("0NX_DH20051");
        array.push("174_DH20051");
        array.push("1AW_DH20051");
        array.push("20F_DH20051");
        array.push("15Z_DH20051");
        array.push("0GW_DH20051");
        array.push("00U_DH20051");
        array.push("017_DH20051");
        array.push("0GJ_DH20051");
        array.push("0JY_DH20051");
        array.push("18N_DH20051");
        array.push("18P_DH20051");
        array.push("18X_DH20051");
        array.push("0HT_DH20051");
        array.push("01N_DH20051");
        array.push("0IV_DH20051");
        array.push("03N_DH20051");
        array.push("0LK_DH20051");
        array.push("11X_TV20021");
        array.push("0K8_TV20021");
        array.push("11U_TV20021");
        array.push("00E_TV20021");
        array.push("02N_TV20021");
        array.push("0CR_TV20021");
        array.push("0N7_TV20021");
        array.push("0N8_TV20021");
        array.push("0DH_TB30021");
        array.push("01Z_HT30021");
        array.push("028_HT30021");
        array.push("01U_HT30021");
        array.push("06C_HT30021");
        array.push("1CS_MK20021");
        array.push("1HT_MK20021");
        array.push("1CW_MK20021");
        array.push("28D_MK20021");
        array.push("28V_MK20021");
        array.push("1KV_MK20021");
        array.push("0FV_HT20171");
        array.push("02G_HT20171");
        array.push("02H_HT20171");
        array.push("025_HT20171");
        array.push("04X_HT20171");
        array.push("1PQ_HT20171");
        array.push("1PZ_HT20171");
        array.push("01P_HT20171");
        array.push("19B_HT20171");
        array.push("00C_HT20171");
        array.push("03D_HT20171");
        array.push("02K_HT20171");
        array.push("01F_HT20171");
        array.push("06E_HT20171");
        array.push("1T9_HT20171");
        array.push("0QB_HT20171");
        array.push("01I_HT20171");
        array.push("02M_HT20171");
        array.push("2HS_VT20031");
        array.push("28S_NT30221");
        array.push("29R_NT30221");
        array.push("119_NT30031");
        array.push("021_HC30021");
        array.push("0JT_HC30021");
        array.push("06O_HC30021");
        array.push("17K_HC30021");
        array.push("0HK_HC30021");
        array.push("0F4_MK20022");
        array.push("08N_MK20022");
        array.push("0EZ_MK20022");
        array.push("0G1_MK20022");
        array.push("1DT_VT30021");
        array.push("05D_VT30021");
        array.push("1CX_VT30021");
        array.push("1FA_VT30021");
        array.push("007_VT30021");
        array.push("0K2_VT30021");
        array.push("21M_VT30021");
        array.push("0C9_VT30021");
        array.push("1Z8_VT30021");
        array.push("2EE_VT30021");
        array.push("2FG_VT30021");
        array.push("03U_VT30021");
        array.push("05C_VT30021");
        array.push("2CT_VT30021");
        array.push("2CU_VT30021");
        array.push("2CR_VT30021");
        array.push("18K_VT30021");
        array.push("23I_VT30021");
        array.push("1VL_VT30021");
        array.push("2CK_VT30021");
        array.push("23H_VT30021");
        array.push("0EY_VT30021");
        array.push("2HP_VT30021");
        array.push("2HJ_VT30021");
        array.push("1X1_VT30021");
        array.push("2I5_VT30021");
        array.push("289_VT30021");
        array.push("2HB_VT30021");
        array.push("2F0_VT30021");
        array.push("2I2_VT30021");
        array.push("090_VT30021");
        array.push("198_VT30021");
        array.push("1HX_VT30021");
        array.push("00A_VT30021");
        array.push("0K8_VT30021");
        array.push("00H_VT30021");
        array.push("01M_VT30021");
        array.push("2J4_VT30021");
        array.push("2HZ_VT30021");
        array.push("1FP_VT30021");
        array.push("03K_VT30021");
        array.push("062_VT30021");
        array.push("02D_VT30021");
        array.push("04Q_VT30021");
        array.push("0ZE_VT30021");
        array.push("030_VT30021");
        array.push("02O_VT30021");
        array.push("02N_VT30021");
        array.push("031_VT30021");
        array.push("032_VT30021");
        array.push("048_VT30021");
        array.push("1S9_VT30021");
        array.push("2AZ_VT30021");
        array.push("0ZQ_HP20141");
        array.push("0TR_HP20141");
        array.push("0WY_HP20141");
        array.push("13X_HP20141");
        array.push("28V_HP20141");
        array.push("174_HP20141");
        array.push("0RM_HP20141");
        array.push("14Z_HP20141");
        array.push("13I_HP20141");
        array.push("29E_HP20141");
        array.push("015_HP20141");
        array.push("0PB_HP20141");
        array.push("2B7_HP20141");
        array.push("1VR_HP20141");
        array.push("0BE_HP20141");
        array.push("040_HP20141");
        array.push("0AS_AL20011");
        array.push("00O_AL20011");
        array.push("13H_AL20011");
        array.push("13V_AL20011");
        array.push("077_AL20011");
        array.push("01W_AL20011");
        array.push("092_AL20011");
        array.push("11W_AL20011");
        array.push("071_AL20011");
        array.push("027_AL20011");
        array.push("0EZ_AL20011");
        array.push("021_AL20011");
        array.push("01F_AL20011");
        array.push("03L_AL20011");
        array.push("02Y_AL20011");
        array.push("02L_NV20021");
        array.push("15W_NV20021");
        array.push("02K_NV20021");
        array.push("0GV_NV20021");
        array.push("02A_NV20021");
        array.push("10I_NV20021");
        array.push("16I_NV20021");
        array.push("0C6_NV20021");
        array.push("04B_NV20021");
        array.push("00S_NV20021");
        array.push("00F_NV20021");
        array.push("04A_NV20021");
        array.push("147_NV20021");
        array.push("0F7_NV20021");
        array.push("0DQ_NV20021");
        array.push("0EJ_NV20021");
        array.push("117_NV20021");
        array.push("090_NV20021");
        array.push("17P_NV20021");
        array.push("01O_NV20021");
        array.push("0GF_NV20021");
        array.push("0JM_NV20021");
        array.push("05R_NV20021");
        array.push("018_NV20021");
        array.push("14L_NV20021");
        array.push("0LZ_CT30021");
        array.push("12K_CT30021");
        array.push("0RN_CT30021");
        array.push("061_CT30021");
        array.push("14E_CT30021");
        array.push("0G0_CT30021");
        array.push("14B_CT30021");
        array.push("1E8_CT30021");
        array.push("042_CT30021");
        array.push("05Z_CT30021");
        array.push("08J_CT30021");
        array.push("1BN_CT30021");
        array.push("17K_CT30021");
        array.push("17J_CT30021");
        array.push("0NI_CT30021");
        array.push("361_CT30021");
        array.push("0K9_CT30021");
        array.push("120_CT30021");
        array.push("037_CT30021");
        array.push("20M_CT30021");
        array.push("0KJ_CT30021");
        array.push("0EP_CT30021");
        array.push("0O4_CT30021");
        array.push("101_CT30021");
        array.push("05K_CT30021");
        array.push("01J_CT30021");
        array.push("477_CT30021");
        array.push("1C0_CT30021");
        array.push("03I_CT30021");
        array.push("0ZX_CT30021");
        array.push("36P_CT30021");
        array.push("01I_CT30021");
        array.push("00X_CT30021");
        array.push("09M_CT30021");
        array.push("0YG_CT30021");
        array.push("333_CT30021");
        array.push("09U_CT30021");
        array.push("39Z_CT30021");
        array.push("16H_CT30021");
        array.push("0ZY_CT30021");
        array.push("0OW_CT30021");
        array.push("019_CT30021");
        array.push("1BS_CT30021");
        array.push("1CI_CT30021");
        array.push("22D_LH30071");
        array.push("208_LH30071");
        array.push("04F_LH30071");
        array.push("17U_LH30071");
        array.push("24Q_LH30071");
        array.push("04I_LH30071");
        array.push("006_LL20021");
        array.push("007_LL20021");
        array.push("005_LL20021");
        array.push("0F7_LL20021");
        array.push("01G_HG20031");
        array.push("03L_HG20031");
        array.push("0KB_HG20031");
        array.push("0QY_HG20031");
        array.push("1C6_HG20031");
        array.push("30M_HG20031");
        array.push("330_HG20031");
        array.push("35S_HG20031");
        array.push("372_HG20031");
        array.push("37V_HG20031");
        array.push("37X_HG20031");
        array.push("201_TN30101");
        array.push("0AB_TN30101");
        array.push("069_TN30101");
        array.push("1CC_TT30121");
        array.push("0XW_TT30121");
        array.push("0LZ_TT30121");
        array.push("11L_TT30121");
        alert(array.length);
        params.customerOrder = array;
        params.token = Utils.getToken();
        var kData = $.param(params, true);
        $.ajax({
            type: "POST", url: "/images/exportAlbumEx", data: (kData), dataType: "json", success: function (data) {
                $("#divOverlay").hide();
                if (data.error && data.errMsg != undefined) {
                    $("#errMsg").html("Tải album không thành công. Lỗi: " + escapeSpecialChar(data.errMsg)).show()
                }
            }
        });
        return false
    }
};
var KPIManger = {
    planType: {STAFF: 1, ROUTING: 2},
    pagePlanType: null,
    monthPlan: null,
    columns: new Array(),
    frozenColumns: new Array(),
    setColumn: function (field, title, align, width) {
        if (align == undefined || align == null) {
            align = "right"
        }
        if (width == undefined || width == null) {
            width = 100
        }
        var column = {
            field: field,
            title: title,
            align: align,
            width: width,
            singleSelect: true,
            formatter: function (value, row, index) {
                if (value == 0) {
                    value = ""
                }
                if (row.footer != undefined && row.footer != null) {
                    return format('<span class="value-footer" style="font-weight:bold">{0}</span>', formatCurrency(value))
                }
                var HTML = '<input type="text" class="InputTextStyle Value" value="{0}" index="{1}" id="kpiValue{2}{3}" onchange="KPIManger.showTotalAmount();"   style="text-align:right;width:95%;margin-bottom:0px" maxlength="17" />';
                return format(HTML, value, index, field, index)
            }
        };
        return column
    },
    initData: function (isSearch) {
        var params = new Object();
        params.monthPlan = $("#searchMonth").val().trim();
        params.kpiType = KPIManger.pagePlanType;
        KPIManger.monthPlan = params.monthPlan;
        var cbVl = $("#cbMulti").val();
        if (isSearch == true && !isNullOrEmpty(cbVl)) {
            params.lstObjectCode = $("#cbMulti").val()
        }
        Utils.getJSONDataByAjax(params, "/kpi-manager/init-data", function (data) {
            var listKpi = data.listKpi;
            var listKpiPlan = data.listKpiPlan;
            var listStaff = data.listStaff;
            var listRouting = data.listRouting;
            var mapDataSource = new Map();
            var isPlanStaff = KPIManger.pagePlanType == KPIManger.planType.STAFF;
            KPIManger.columns = new Array();
            KPIManger.frozenColumns = new Array();
            for (var i = 0; i < listKpi.length; ++i) {
                var field = "kpi" + listKpi[i].id;
                var title = listKpi[i].kpiName;
                var column = KPIManger.setColumn(field, title);
                column.kpiId = listKpi[i].id;
                KPIManger.frozenColumns.push(column)
            }
            for (var i = 0; i < listKpiPlan.length; ++i) {
                var KEY = "kpi" + listKpiPlan[i].kpi.id;
                if (isPlanStaff) {
                    KEY += "st" + listKpiPlan[i].staff.id
                } else {
                    KEY += "st" + listKpiPlan[i].routing.id
                }
                mapDataSource.put(KEY, listKpiPlan[i].value)
            }
            var datasource = new Array();
            var footer = new Object();
            footer.footer = true;
            footer.staffCode = "TỔNG";
            footer.staffName = "TỔNG";
            footer.month = "TỔNG";
            var size = 0;
            if (isPlanStaff) {
                listStaff.push(footer);
                size = listStaff.length
            } else {
                listRouting.push(footer);
                size = listRouting.length
            }
            for (var i = 0; i < size; ++i) {
                var obj = new Object();
                obj.stt = (i + 1);
                if (isPlanStaff) {
                    obj.objectId = listStaff[i].id;
                    obj.objectCode = listStaff[i].staffCode;
                    obj.objectName = listStaff[i].staffName;
                    obj.footer = listStaff[i].footer
                } else {
                    obj.objectId = listRouting[i].id;
                    obj.objectCode = listRouting[i].routingCode;
                    obj.objectName = listRouting[i].routingName;
                    obj.footer = listRouting[i].footer
                }
                if (obj.footer == undefined) {
                    obj.stt = (i + 1);
                    obj.month = KPIManger.monthPlan
                } else {
                    obj.stt = "TỔNG";
                    obj.month = "TỔNG"
                }
                for (var j = 0; j < KPIManger.frozenColumns.length; ++j) {
                    var KEY = "kpi" + KPIManger.frozenColumns[j].kpiId;
                    if (isPlanStaff) {
                        KEY += "st" + listStaff[i].id
                    } else {
                        KEY += "st" + listRouting[i].id
                    }
                    var field = KPIManger.frozenColumns[j].field;
                    var value = mapDataSource.get(KEY);
                    if (value == null) {
                        value = "0"
                    }
                    eval(format("obj.{0} = {1};", field, value))
                }
                datasource.push(obj)
            }
            if (isSearch != true) {
                for (var i = 0; i < size - 1; ++i) {
                    var cbObj = new Object();
                    if (isPlanStaff) {
                        cbObj.objectId = listStaff[i].id;
                        cbObj.objectCode = listStaff[i].staffCode;
                        cbObj.objectName = listStaff[i].staffName;
                        cbObj.footer = listStaff[i].footer
                    } else {
                        cbObj.objectId = listRouting[i].id;
                        cbObj.objectCode = listRouting[i].routingCode;
                        cbObj.objectName = listRouting[i].routingName;
                        cbObj.footer = listRouting[i].footer
                    }
                    $("#cbMulti").append($("<option>", {
                        value: cbObj.objectId,
                        id: "multiselect-" + cbObj.objectId,
                        text: cbObj.objectCode + " - " + cbObj.objectName
                    }))
                }
            }
            $("#cbMulti").multiselect({
                minWidth: 195,
                noneSelectedText: "Lựa ch�?n",
                selectedText: function (numChecked, numTotal, checkedItems) {
                    if (numChecked == numTotal) {
                        return "Tất cả"
                    } else {
                        return "�?ang ch�?n " + numChecked + " đối tượng"
                    }
                },
                click: function (event, ui) {
                    if (ui.checked) {
                        $(event.currentTarget).next("span").css("color", "orange")
                    } else {
                        $(event.currentTarget).next("span").css("color", "")
                    }
                },
                checkAll: function (event) {
                    $(".ui-multiselect-menu .ui-multiselect-checkboxes label input[aria-selected=true]").each(function (i, e) {
                        $(e).next("span").css("color", "orange")
                    })
                },
                uncheckAll: function (event) {
                    $(".ui-multiselect-menu .ui-multiselect-checkboxes label input:not([aria-selected])").each(function (i, e) {
                        $(e).next("span").css("color", "")
                    })
                }
            });
            $(".ui-multiselect-checkboxes li input[checked=checked]").each(function (i, e) {
                $(this).next("span").css("color", "orange")
            });
            $("#grid").datagrid({
                width: $(window).width() - 45,
                data: datasource,
                fitColumns: true,
                scrollbarSize: 0,
                singleSelect: true,
                frozenColumns: [[{field: "stt", title: "STT", width: 35, align: "center"}, {
                    field: "objectCode",
                    title: isPlanStaff ? "Mã NVBH" : "Mã tuyến",
                    width: 160
                }, {field: "objectName", title: isPlanStaff ? "NVBH" : "Tên tuyến", width: 160}, {
                    field: "month",
                    rowspan: 2,
                    title: "Tháng",
                    width: 80,
                    align: "center"
                }]],
                columns: [KPIManger.frozenColumns],
                onLoadSuccess: function (data) {
                    Utils.bindFormatOnTextfieldInputCss("Value", Utils._TF_NUMBER);
                    KPIManger.showTotalAmount()
                }
            })
        })
    },
    beforeImportExcel: function () {
        if (!previewImportExcelFile(document.getElementById("excelFile"))) {
            return false
        }
        $("#errExcelMsg").html("").hide();
        $("#sucExcelMsg").html("").hide();
        $(".VinamilkTheme #divOverlay").show();
        return true
    },
    afterImportExcelUpdate: function (responseText, statusText, xhr, $form) {
        $("#excelFile").val("");
        $("#fakefilepc").val("");
        $("#productGrid1").datagrid("reload");
        $(".VinamilkTheme #divOverlay").hide();
        if (statusText == "success") {
            $("#responseDiv").html(responseText);
            var token = $("#tokenValue").html();
            $("#token").val(Utils.XSSEncode(token));
            $("#transactionCode").val(Utils.XSSEncode($("#transactionCodeNew").html()));
            if ($("#errorExcel").html().trim() == "true" || $("#errorExcelMsg").html().trim().length > 0) {
                $("#errExcelMsg").html($("#errorExcelMsg").html()).show()
            } else {
                var totalRow = parseInt($("#totalRow").html().trim());
                var numFail = parseInt($("#numFail").html().trim());
                var fileNameFail = $("#fileNameFail").html();
                var mes = "Nh�p thành công " + (totalRow - numFail) + " dòng, thất bại " + numFail + " dòng. ";
                if (numFail > 0) {
                    $("#sucExcelMsg").html(mes + '<a style="color:#f00" href="' + fileNameFail + '">Xem chi tiết lỗi!</a>').show()
                } else {
                    $("#sucExcelMsg").html(mes).show()
                }
                setTimeout(function () {
                    $("#sucExcelMsg").html("").hide()
                }, 15000)
            }
        }
    },
    exportExcelTemplate: function () {
        var url = "/kpi-manager/kpi-rate/export-template";
        if (CommonSearch._xhrReport != null) {
            CommonSearch._xhrReport.abort();
            CommonSearch._xhrReport = null
        }
        CommonSearch._xhrReport = $.ajax({
            type: "POST", url: url, dataType: "json", success: function (data) {
                hideLoadingIcon();
                if (data.error && data.errMsg != undefined) {
                    $("#" + errMsg).html("Xuất file không thành công. Lỗi: " + escapeSpecialChar(data.errMsg)).show()
                } else {
                    if (data.hasData != undefined && !data.hasData) {
                        $("#" + errMsg).html("Không có dữ liệu để xuất file.").show()
                    } else {
                        window.location.href = data.view;
                        setTimeout(function () {
                            CommonSearch.deleteFileExcelExport(data.view)
                        }, 30000)
                    }
                }
            }, error: function (XMLHttpRequest, textStatus, errorDivThrown) {
            }
        });
        return false
    },
    showTotalAmount: function () {
        var rows = $("#grid").datagrid("getRows");
        var size = rows.length - 1;
        var kpiPlanData = new Array();
        for (var j = 0; j < KPIManger.frozenColumns.length; ++j) {
            var row = new Object();
            var field = KPIManger.frozenColumns[j].field;
            var SUM = 0;
            for (var i = 0; i < size; ++i) {
                var value = $(format("#kpiValue{0}{1}", field, i)).val().trim();
                if (isNullOrEmpty(value)) {
                    value = 0
                } else {
                    if (Number(value) >= 0) {
                        SUM += Number(Utils.returnMoneyValue(value))
                    } else {
                        if (Number(value) < 0) {
                            $("#errMsg").html("Không được nh�p số âm").show()
                        } else {
                            $("#errMsg").html("Phải nh�p số").show()
                        }
                    }
                }
            }
            $("#grid").datagrid("getRows")[size][field] = SUM
        }
        $("#grid").datagrid("updateRow", {index: size});
        $("#grid").datagrid("mergeCells", {index: size, field: "stt", colspan: 4});
        $(".datagrid-td-merged").css("font-weight", "bold");
        $("#grid").datagrid("fixRowHeight", size)
    },
    saveData: function () {
        var rows = $("#grid").datagrid("getRows");
        var size = rows.length - 1;
        var kpiPlanData = new Array();
        for (var i = 0; i < size; ++i) {
            for (var j = 0; j < KPIManger.frozenColumns.length; ++j) {
                var field = KPIManger.frozenColumns[j].field;
                var kpiId = KPIManger.frozenColumns[j].kpiId;
                var value = $(format("#kpiValue{0}{1}", field, i)).val().trim();
                if (isNullOrEmpty(value)) {
                    value = -1
                }
                var obj = new Object();
                obj.objectId = rows[i].objectId;
                obj.kpiId = kpiId;
                obj.value = Number(Utils.returnMoneyValue(value));
                kpiPlanData.push(obj)
            }
        }
        var dataModel = {
            monthPlan: $("#dateCreate").val().trim(),
            planType: KPIManger.pagePlanType,
            kpiPlanData: kpiPlanData
        };
        dataModel[Utils.VAR_NAME] = "kpiPlanObjectVO";
        var saveData = getSimpleObject(dataModel);
        $("#successMsg").html("").hide();
        $("#errMsg").html("").show();
        Utils.addOrSaveData(saveData, "/kpi-manager/save-data", null, "errMsg", function (data) {
            if (isNullOrEmpty(data.successMsg)) {
                $("#errMsg").html(data.errMsg).show()
            } else {
                $("#successMsg").html("Lưu thành công.").show()
            }
        })
    },
    resetData: function () {
        $(".Value").val("");
        $(".value-footer").html("")
    },
    uploadExcel: function () {
        ReportsUtils.uploadExcel(function (data) {
            KPIManger.initData()
        })
    },
    exportExcel: function () {
        $("#errExcelMsg").html("").hide();
        $("#errMsg").html("").hide();
        $.messager.confirm("Xác nh�n", "Bạn có muốn export khách hàng ra excel?", function (r) {
            if (r) {
                var params = new Object();
                params.monthPlan = $("#searchMonth").val().trim();
                params.kpiType = KPIManger.pagePlanType;
                KPIManger.monthPlan = params.monthPlan;
                var lstCb = $("#cbMulti").val();
                if (!isNullOrEmpty(lstCb)) {
                    params.lstObjectCode = $("#cbMulti").val()
                }
                var url = "/kpi-manager/export";
                ReportsUtils.exportExcel(params, url, "errExcelMsg", true)
            }
        });
        return false
    }
};